do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then v15("LOL!",v9());break;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v64=v3(v1(v30,16));if v19 then local v74=v6(v64,v19);v19=nil;return v74;else return v64;end end end);local function v20(v31,v32,v33)if v33 then local v65=(v31/((801 -(760 + 39))^(v32-(1 + 0))))%((2 + 0)^(((v33-(1 -(1930 -(1604 + 326)))) -(v32-(901 -(526 + 374)))) + 1 + 0));return v65-(v65%((2 -0) -1));else local v66=0 -0;local v67;while true do if (((1969 -(30 + 1460)) -(72 + 407))==v66) then v67=(1270 -(1096 + 172))^(v32-(2 -1));return (((v31%(v67 + v67))>=v67) and (1 + (0 -0))) or (0 + 0);end end end end local function v21()local v38=0 + 0;local v39;while true do if (v38==(0 -0)) then v39=v2(v16,v18,v18);v18=v18 + (2 -1);v38=3 -2;end if (v38==(1 + 0)) then return v39;end end end local function v22()local v40=0 + 0;local v41;local v42;while true do if ((3 -2)==v40) then return (v42 * (142 + 114)) + v41;end if (v40==(386 -(324 + 62))) then v41,v42=v2(v16,v18,v18 + (3 -1));v18=v18 + ((16 -12) -2);v40=2 -(1 + 0);end end end local function v23()local v43,v44,v45,v46=v2(v16,v18,v18 + 3);v18=v18 + 3 + 1;return (v46 * (7410890 + 9366326)) + (v45 * (13073 + 52463)) + (v44 * 256) + v43;end local function v24()local v47=v23();local v48=v23();return (( -(2 -0) * v20(v48,1093 -(679 + 382))) + (1616 -((1713 -(488 + 670)) + 1060))) * (((3 -1) -(0 + 0))^(v20(v48,50 -29,53 -22) -(1105 -(13 + 26 + 43)))) * ((((v20(v48,2 -1,78 -58) * (2^(1339 -(896 + 411)))) + v47)/((5 -3)^(109 -57))) + (1 -0));end local function v25(v34)local v49;if  not v34 then v34=v23();if (v34==(0 -0)) then return "";end end v49=v4(v16,v18,(v18 + v34) -(1605 -(1382 + 222)));v18=v18 + v34;local v50={};for v62=16 -(4 + 11), #v49 do v50[v62]=v3(v2(v4(v49,v62,v62)));end return v7(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==1) then v54=nil;v55=nil;v51=2 + 0;end if ((679 -(497 + 179))~=v51) then else v58=nil;while true do local v75=0;local v76;while true do if ((1638 -(1197 + 441))==v75) then v76=0;while true do if (v76==(2 -1)) then if (v52~=0) then else local v95=0;local v96;while true do if ((1984 -(989 + 995))==v95) then v96=0 + 0;while true do if (v96==1) then local v109=0;while true do if (v109==0) then v55={};v56={v53,v54,nil,v55};v109=1840 -(69 + 1770);end if (v109~=1) then else v96=1 + 1;break;end end end if (v96~=(0 + 0)) then else local v110=0;while true do if (v110==(1419 -(1257 + 161))) then v96=1;break;end if (v110~=(1250 -(1014 + 236))) then else v53={};v54={};v110=1 + 0;end end end if (v96==2) then v52=1;break;end end break;end end end break;end if (v76~=0) then else if (v52==2) then local v97=0;while true do if (v97==(0 -0)) then local v107=0 -0;while true do if (v107==(0 -0)) then for v111=1,v23() do local v112=1281 -(695 + 586);local v113;local v114;local v115;while true do if (v112~=(945 -(684 + 260))) then else v115=nil;while true do if (v113~=(1 + 0)) then else while true do if (v114==0) then v115=v21();if (v20(v115,4 -3,1)==(0 + 0)) then local v259=0;local v260;local v261;local v262;local v263;local v264;while true do if (2~=v259) then else v264=nil;while true do if (v260~=1) then else v263=nil;v264=nil;v260=1190 -(773 + 415);end if (v260==(1 + 1)) then while true do if (v261==2) then local v337=452 -(263 + 189);local v338;while true do if (v337==0) then v338=0 -0;while true do if (v338~=0) then else if (v20(v263,1,1 + 0)==1) then v264[5 -3]=v58[v264[2]];end if (v20(v263,7 -5,2)==(925 -(912 + 12))) then v264[1 + 2]=v58[v264[3]];end v338=1;end if (v338~=1) then else v261=3;break;end end break;end end end if (v261==(1821 -(658 + 1162))) then v264={v22(),v22(),nil,nil};if (v262==(0 + 0)) then local v346=0 -0;local v347;local v348;while true do if (v346~=(1 + 0)) then else while true do if (v347==(0 -0)) then v348=0 + 0;while true do if (0~=v348) then else v264[4 -1]=v22();v264[393 -(51 + 338)]=v22();break;end end break;end end break;end if (v346~=(1228 -(997 + 231))) then else v347=374 -(227 + 147);v348=nil;v346=1 + 0;end end elseif (v262==1) then v264[7 -4]=v23();elseif (v262==(2 + 0)) then v264[1021 -(128 + 890)]=v23() -((1 + 1)^16);elseif (v262==(7 -4)) then local v360=0 -0;local v361;local v362;while true do if (v360==(0 + 0)) then v361=0 -0;v362=nil;v360=1;end if (v360~=(574 -(439 + 134))) then else while true do if ((576 -(344 + 232))~=v361) then else v362=0 -0;while true do if (v362~=0) then else v264[1584 -(1501 + 80)]=v23() -((984 -(445 + 537))^(1082 -(606 + 460)));v264[4]=v22();break;end end break;end end break;end end end v261=3 -1;end if (v261~=0) then else local v339=0 + 0;local v340;while true do if (v339==(0 + 0)) then v340=0;while true do if ((0 -0)==v340) then local v355=0;while true do if (v355~=0) then else v262=v20(v115,2,3 + 0);v263=v20(v115,4,6);v355=1;end if ((1 + 0)==v355) then v340=1;break;end end end if (v340~=(1 -0)) then else v261=1;break;end end break;end end end if (v261==3) then if (v20(v263,10 -7,3)~=(1 + 0)) then else v264[928 -(18 + 906)]=v58[v264[4]];end v53[v111]=v264;break;end end break;end if (v260==(1859 -(1435 + 424))) then local v324=873 -(673 + 200);while true do if (v324==(1 + 0)) then v260=1;break;end if (v324~=0) then else v261=1717 -(884 + 833);v262=nil;v324=1;end end end end break;end if (v259==1) then v262=nil;v263=nil;v259=1926 -(1030 + 894);end if (v259==0) then v260=0;v261=nil;v259=1 -0;end end end break;end end break;end if (v113==(0 -0)) then local v152=1274 -(465 + 809);local v153;while true do if (v152==0) then v153=0;while true do if (v153~=(2 -1)) then else v113=1 + 0;break;end if (v153==(0 + 0)) then local v278=1970 -(79 + 1891);while true do if (v278==(0 -0)) then v114=290 -(275 + 15);v115=nil;v278=1;end if (v278~=1) then else v153=488 -(149 + 338);break;end end end end break;end end end end break;end if (v112~=0) then else v113=1150 -(799 + 351);v114=nil;v112=624 -(356 + 267);end end end for v116=1,v23() do v54[v116-1]=v28();end v107=1 + 0;end if (v107==1) then v97=1;break;end end end if (v97==1) then local v108=0;while true do if (v108==0) then for v118=1 -0,v23() do v55[v118]=v23();end return v56;end end end end end if ((1 + 0)==v52) then v57=v23();v58={};for v99=1,v57 do local v100=0;local v101;local v102;local v103;local v104;while true do if (v100~=(0 + 0)) then else v101=0;v102=nil;v100=1 + 0;end if (v100==1) then v103=nil;v104=nil;v100=2;end if (v100==2) then while true do if (v101==(1284 -(112 + 1172))) then local v120=0;while true do if (v120==(0 + 0)) then v102=0 -0;v103=nil;v120=1;end if ((1 + 0)==v120) then v101=838 -(188 + 649);break;end end end if (v101==1) then v104=nil;while true do if (v102==0) then local v121=0;local v122;while true do if (v121~=0) then else v122=0;while true do if (1==v122) then v102=1;break;end if ((0 + 0)~=v122) then else local v240=0;while true do if (v240~=1) then else v122=1 -0;break;end if (v240==(0 -0)) then v103=v21();v104=nil;v240=1 -0;end end end end break;end end end if (v102~=(1865 -(1039 + 825))) then else if (v103==1) then v104=v21()~=0;elseif (v103==(822 -(277 + 543))) then v104=v24();elseif (v103==(1030 -(317 + 710))) then v104=v25();end v58[v99]=v104;break;end end break;end end break;end end end v56[3]=v21();v52=2 + 0;end v76=1 + 0;end end break;end end end break;end if (v51~=(0 -0)) then else v52=0 + 0;v53=nil;v51=1 + 0;end if (2~=v51) then else v56=nil;v57=nil;v51=3;end end end local function v29(v35,v36,v37)local v59=v35[1];local v60=v35[2];local v61=v35[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (3==v68) then A,B=v27(v11(v73));if  not A[1] then local v77=0;local v78;while true do if (v77==0) then v78=v35[4][v69] or "?";error("Script error at ["   .. v78   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end break;end if (v68==1) then v71={...};v72=v12("#",...) -1;v68=2;end if (v68==2) then v73=nil;function v73()local v79=v59;local v80=Const;local v81=v60;local v82=v61;local v83=v27;local v84={};local v85={};local v86={};for v90=0 -0,v72 do if (((1700 + (539 -(15 + 187)))<(5696 -1940)) and (v90>=v82)) then v84[v90-v82]=v71[v90 + (96 -(38 + 57))];else v86[v90]=v71[v90 + (4 -3)];end end local v87=(v72-v82) + 1;local v88;local v89;while true do local v91=697 -(407 + 290);local v92;while true do if ((v91==(0 -0)) or ((6637 -4651)<=(83 + 330))) then v92=0 -0;while true do if (((3147 -(1925 + 15))<(1133 + 327 + 1791)) and ((4 -3)==v92)) then if ((v89<=(910 -(626 + 261))) or ((2232 + 213)>(2967 + 1159))) then if ((v89<=(53 -42)) or ((3493 -((2460 -1419) + 238))<=(3086 -(764 + 535)))) then if (((1562 -(78 + 1))==(2959 -1476)) and (v89<=5)) then if ((v89<=(5 -3)) or ((16172 -11747)<=(6902 -3711))) then if ((((4784 -(60 + 273)) -1893)>=(2751 -(636 + 988))) and (v89<=(1502 -(90 + (5103 -3691))))) then local v124=(0 -0) -0;local v125;while true do if ((v124==(242 -(175 + (176 -109)))) or ((4193 -(220 + 40))==(6928 -4901))) then v125=v88[1 + 1];v86[v125]=v86[v125](v13(v86,v125 + (2 -1),v88[328 -(273 + 52)]));break;end end elseif ((v89>(1 + 0)) or (((12054 -(612 + 405)) -6555)<=(5816 -(1262 + 499)))) then local v154=(0 -0) + 0;local v155;local v156;local v157;while true do if (((3236 + 1710)>=(4038 -(69 + 462))) and ((1 + 0)==v154)) then v157=nil;while true do if ((4720>=((2471 -(159 + 82)) -(947 + 41))) and (v155==(1 + 0))) then for v291=v156 + (1 -0),v88[1780 -(658 + 2 + 1116)] do v157=v157   .. v86[v291];end v86[v88[2]]=v157;break;end if (((1257 -(183 + 21))==1053) and (v155==(0 -0))) then local v281=(0 -0) + (0 -0);while true do if (((1239 -(503 + 736))==v281) or ((1488 -1114)>(4185 -((2492 -(1419 + 219)) + 369)))) then v156=v88[1965 -(1719 + 243)];v157=v86[v156];v281=1 + (0 -0);end if (((629 + 496)==1125) and (v281==(1 -0))) then v155=(4 -3) -0;break;end end end end break;end if (((14850 -10993)>=(18 + 0 + 125)) and (v154==((0 + 0) -0))) then v155=0 + 0;v156=nil;v154=1571 -(370 + 1200);end end else local v158=0 -0;local v159;local v160;local v161;while true do if (((582 + 1640)==(2891 -669)) and (v158==(2 -1))) then v161=v86[v159 + 2 + 0];if ((v161>(0 + 0)) or (1143>=(723 + (12213 -8739)))) then if ((v160>v86[v159 + (1178 -(421 + 756))]) or (669==4203)) then v69=v88[3];else v86[v159 + 3 + 0 + 0]=v160;end elseif ((v160<v86[v159 + 1 + 0]) or ((525 + 193)>=(5260 -(1264 + 569)))) then v69=v88[12 -9];else v86[v159 + 3 + 0]=v160;end break;end if (((3039 -(930 + 699))<=(1931 + 1642)) and (v158==(0 -0))) then local v249=0 -0;while true do if (((1359 -516)==(3555 -2712)) and (v249==(1605 -(928 + 676)))) then v158=1;break;end if ((0==v249) or ((1164 + 561)<1634)) then v159=v88[4 -(650 -(158 + 490))];v160=v86[v159];v249=1678 -(1666 + 11);end end end end end elseif (((10 + 14)==(1030 -((64 -28) + 970))) and (v89<=(12 -9))) then local v126=0 + 0;local v127;local v128;local v129;while true do if (((1 + 0)==v126) or (4133<=(582 + 88 + 79))) then v129={};v128=v10({},{__index=function(v241,v242)local v250=0 + 0;local v251;local v252;while true do if ((v250==(1 + 0)) or ((4951 -1279)<=(1738 + 664))) then while true do if ((3489>(184 -(226 -145))) and ((0 -(0 + 0))==v251)) then local v318=0 -(1708 -(874 + 834));while true do if ((3592==(545 + 3047)) and (v318==(0 -0))) then v252=v129[v242];return v252[1 + 0][v252[1064 -(142 + (2016 -1096))]];end end end end break;end if (((1592 -(497 + (1926 -(534 + 1131))))<=(2257 -(142 + 394))) and ((1722 -(943 + 779))==v250)) then v251=0 + 0;v252=nil;v250=37 -(34 + 2);end end end,__newindex=function(v243,v244,v245)local v253=0;local v254;while true do if ((v253==(1768 -(852 + 916))) or (3398<2365)) then v254=v129[v244];v254[2 -1][v254[2 -0]]=v245;break;end end end});v126=1440 -(1386 + 52);end if (((4 -(2 + 0))==v126) or ((1992 + 1422)>(3146 + 1543))) then for v246=1,v88[9 -(1 + 4)] do local v247=1083 -(763 + 320);local v248;while true do if (((979 -618)<=(10670 -6391)) and (v247==((0 -0) -0))) then v69=v69 + (3 -2);v248=v79[v69];v247=579 -(278 + (1955 -(1195 + 460)));end if ((((7009 -(490 + 299)) -(998 + 844))==(5092 -(559 + 155))) and ((1 + 0)==v247)) then if (((15826 -11330)>(3795 -1579)) and (v248[4 -3]==47)) then v129[v246-(1 -0)]={v86,v248[1 + (3 -1)]};else v129[v246-(1 + 0)]={v36,v248[3]};end v85[ #v85 + 1 + 0]=v129;break;end end end v86[v88[2 + 0]]=v29(v127,v128,v37);break;end if ((v126==(1700 -(1244 + 456))) or ((2467 + 1203)==((3293 -(648 + 74)) + 1267))) then v127=v81[v88[1825 -(1761 + 61)]];v128=nil;v126=(1934 -1238) -(52 + 29 + 614);end end elseif (((8477 -4609)<=4688) and (v89>(1 + 3))) then local v162=0 + 0;local v163;local v164;local v165;while true do if ((v162==(759 -(275 + 483))) or ((217 -145)>=(4645 + 27))) then v165=v88[1316 -((3524 -2567) + 356)];for v265=1,v165 do v164[v265]=v86[v163 + v265];end break;end if (((10507 -7664)>(665 + 443)) and (v162==(1197 -(593 + 604)))) then local v255=(0 -0) -0;while true do if ((v255==1) or ((190 -40)>=(182 + 1468))) then v162=1;break;end if ((v255==(1846 -(451 + 1395))) or ((1221 -(47 + 606))==1750)) then v163=v88[5 -3];v164=v86[v163];v255=1 -0;end end end end else local v166=0 -0;local v167;local v168;while true do if (((6191 -(22 + 1856))>=(7155 -5027)) and (v166==1)) then while true do if ((v167==(384 -(359 + 25))) or ((1974 -541)>(2804 -1072))) then v168=v88[(184 + 222) -(56 + 348)];do return v13(v86,v168,v70);end break;end end break;end if ((v166==0) or ((671 + 2686)>(10954 -7020))) then v167=0;v168=nil;v166=3 -2;end end end elseif (((929 + (9378 -5665))>(84 + 2)) and (v89<=(4 + 4))) then if ((3448>(3833 -(1318 + 519))) and (v89<=(5 + 1))) then local v130=0 -0;local v131;local v132;local v133;local v134;while true do if ((v130==(0 + 0)) or (((2746 + 1158) -(82 + 324))>(15094 -10913))) then v131=(0 -0) -0;v132=nil;v130=1 + 0;end if (((16391 -12693)>(14696 -11550)) and (v130==(1 + 1))) then while true do if ((v131==(1 + (0 -0))) or (1650<(3586 -2530))) then v134=nil;while true do if (((159 + 133)==(1397 -1105)) and (v132==(182 -(10 + 172)))) then local v296=0 + 0;while true do if ((v296==(0 -0)) or (((1261 -883) + 2487)<(3551 -(655 + (859 -(325 + 364)))))) then v133=v88[2];v134={};v296=1 + 0;end if ((v296==(1 + 0)) or (4462<(2066 + 1338))) then v132=1;break;end end end if ((((5586 -3372) + 1055)==3269) and (v132==(1 + 0))) then for v308=1529 -(653 + 875), #v85 do local v309=1879 -(817 + 1062);local v310;while true do if ((((4641 -1617) -(1676 + 40))<=(1308 + 1736)) and (0==v309)) then v310=v85[v308];for v331=0 + 0, #v310 do local v332=1480 -(1364 + 116);local v333;local v334;local v335;local v336;while true do if ((v332==(1409 -(1252 + 151 + 6))) or ((2520 + 1512)<=(2928 -(3155 -(315 + 972))))) then v333=0 -0;v334=nil;v332=1 -0;end if ((v332==((95 -63) -(19 + 12))) or (((898 + 1080) -1133)==(301 + 36))) then v335=nil;v336=nil;v332=1 + 0 + 1;end if (((3568 -(254 + 185))>=1994) and (v332==(1352 -(1229 + 121)))) then while true do if (((1267 -(95 + (138 -87)))<(6334 -(57 + 1360))) and (v333==0)) then local v353=1521 -(839 + 682);while true do if ((1456>(2427 -(1440 + 453))) and (v353==(1078 -(507 + 570)))) then v333=1902 -(1313 + 588);break;end if (((1549 + 656)>781) and (v353==(0 -0))) then v334=v310[v331];v335=v334[1 + 0];v353=447 -(122 + 324);end end end if ((v333==(3 -2)) or ((3489 -(1331 + 646))<=(773 + 87))) then v336=v334[2];if (((5614 -(550 + 298))>=1624) and (v335==v86) and (v336>=v133)) then local v356=0 + 0;local v357;while true do if ((v356==(0 -0)) or ((6144 -(2917 -(707 + 201)))>(7849 -2973))) then v357=1704 -(31 + 1673);while true do if (((3149 -(90 + 1058))>=(2516 -(108 + 603))) and (v357==(1648 -(1386 + (1997 -(1319 + 416)))))) then v134[v336]=v335[v336];v334[1 + 0]=v134;break;end end break;end end end break;end end break;end end end break;end end end break;end end break;end if ((v131==(0 + 0)) or (503>(1584 + 1087))) then local v267=897 -(209 + 688);while true do if (((3920 -(65 + 298))==(11936 -8379)) and (v267==(0 + 0))) then v132=1849 -((2095 -(29 + 1641)) + 1424);v133=nil;v267=(2122 -769) -(729 + (1821 -1198));end if ((v267==1) or ((4696 -1600)>=(3834 + 199))) then v131=1 + 0;break;end end end end break;end if ((v130==(1 + 0)) or (4358>4715)) then v133=nil;v134=nil;v130=4 -(2 + 0);end end elseif ((v89>7) or (((4705 + 15644) -15886)<3400)) then v86[v88[268 -(35 + 231)]]=v88[2 + 1] + v86[v88[2 + 2]];else v86[v88[2]]=v88[6 -3];end elseif (((6369 -(509 + 1256))>(1118 -(573 + 246))) and (v89<=(839 -(120 + (1838 -1128))))) then if (((919 + 104 + 638)<1782) and v86[v88[5 -3]]) then v69=v69 + (2 -1);else v69=v88[3];end elseif ((v89==(5 + 5)) or (2976<849)) then for v238=v88[1 + 1],v88[8 -5] do v86[v238]=nil;end else v86[v88[5 -3]]=v88[3 + 0]~=0;end elseif ((v89<=(15 + 2)) or ((64 + 426 + 1495)>(8037 -5854))) then if ((v89<=(444 -(101 + 329))) or ((10290 -6724)<=(1227 + 582))) then if ((v89<=(2 + 10)) or ((2918 -(2344 -740))>=((15186 -11624) + 114))) then v86[v88[1 + 1]]=v86[v88[1567 -(172 + 63 + 1329)]][v88[4]];elseif ((4395==(1763 + 2632)) and (v89>13)) then local v172=0 -0;local v173;local v174;local v175;while true do if ((4816>=(14853 -11043)) and (v172==(1 -0))) then v175=nil;while true do if ((((4383 + 614) -(22 + 806))>(91 + 156)) and (v173==(1 + 0))) then while true do if (((4175 -(16 + 94))>=(3275 -1407)) and (v174==(0 + 0))) then v175=v88[2];do return v86[v175](v13(v86,v175 + (1925 -(284 + 1027 + 613)),v88[3]));end break;end end break;end if ((v173==(0 + 0)) or ((5797 -(766 + 214))<=((797 + 866) -(42 + 1595)))) then local v283=0 -0;while true do if ((v283==1) or ((1103 + 1355)>=3843)) then v173=4 -3;break;end if ((93<(2733 -(313 + 140))) and (v283==(0 -0))) then v174=1123 -(752 + (778 -407));v175=nil;v283=18 -(5 + 12);end end end end break;end if ((0==v172) or (4510==(4096 -1254))) then v173=0;v174=nil;v172=1 + 0;end end else local v176=0;local v177;local v178;while true do if ((v176==(104 -((1252 -(986 + 182)) + 19))) or (((2322 + 346) -(555 + 526))>(4712 -(114 + 96)))) then while true do if ((v177==(0 + 0)) or (((1305 -(385 + 510)) -252)<=(1465 -(122 + 1310)))) then v178=v88[1012 -(1005 + 5)];v86[v178](v13(v86,v178 + (1141 -(177 + 963)),v70));break;end end break;end if ((1955>(2247 -1627)) and (v176==(0 + 0))) then v177=1637 -((4353 -2759) + 43);v178=nil;v176=1 + 0;end end end elseif (((3932 + 371)>3089) and (v89<=(4 + 11))) then v86[v88[(90 -(46 + 42)) -0]]=v86[v88[1 + 2]] + v88[4];elseif ((v89>(12 + (15 -11))) or ((59 + (1302 -911))>1885)) then local v179=(0 -0) -0;local v180;local v181;local v182;local v183;while true do if (((4843 -(144 + 755))>(1357 -(235 + 851))) and (v179==(1893 -(51 + 4 + 1838)))) then v180=0 + 0 + 0;v181=nil;v179=352 -(267 + 84);end if ((v179==(606 -(174 + 430))) or ((1187 -(387 + 32))>(10221 -7731))) then while true do if ((v180==(3 -1)) or ((8607 -5558)<=2645)) then if ((v182>(0 + 0)) or ((3652 -(122 + 234 + 885))<=((3353 + 4002) -5335))) then if (((4028 -2178)<=((2458 + 848) -(705 + 342))) and (v183<=v86[v181 + 1 + 0])) then local v325=562 -(495 + 67);local v326;while true do if ((v325==(0 + 0)) or ((1021 -680)>1405)) then v326=(404 -252) -(41 + 111);while true do if ((((1436 -(295 + 55)) -(56 + (912 -684)))<=1364) and (v326==(0 + (637 -(305 + 332))))) then v69=v88[569 -(72 + 494)];v86[v181 + (1544 -(389 + 173 + 979))]=v183;break;end end break;end end end elseif (((5222 -(576 + 14))>4151) and (v183>=v86[v181 + (2 -1)])) then local v327=0;while true do if (((0 + (1326 -(689 + 637)))==v327) or (((2250 -1671) -420)>=(3006 + 1671))) then v69=v88[3];v86[v181 + 3]=v183;break;end end end break;end if ((((1836 + 3264) -(679 + 365))>=(3473 -1135)) and (v180==(654 -(245 + 408)))) then local v284=0 + 0;while true do if (((2649 + 448)==3097) and (v284==1)) then v180=2 -0;break;end if ((((170 -91) + (2370 -(120 + 10)))<=(6736 -3914)) and (v284==(0 -0))) then v183=v86[v181] + v182;v86[v181]=v183;v284=1 + 0;end end end if ((v180==(0 + 0)) or (4968<=(6814 -4522))) then v181=v88[4 -(1534 -(690 + 842))];v182=v86[v181 + 2];v180=1254 -(489 + 764);end end break;end if ((v179==(1 + 0)) or (((3042 -(774 + 1183)) + 1331)>=(116 + 4239))) then v182=nil;v183=nil;v179=2;end end else local v184=1053 -(438 + 615);local v185;while true do if ((v184==0) or ((1329 -(30 + 698))>=2497)) then v185=v88[2];v86[v185](v13(v86,v185 + 1 + 0,v88[1249 -(730 + 516)]));break;end end end elseif ((((17633 -13325) -(762 + (760 -268)))<=3833) and (v89<=(10 + 5 + 5))) then if ((v89<=(4 + 14)) or ((2775 + (1685 -905))==(164 + 769))) then v86[v88[2]][v86[v88[148 -(137 + (1121 -(625 + 488)))]]]=v86[v88[478 -((423 -199) + 250)]];elseif ((v89==((552 -(203 + 313)) -17)) or ((957 + 595)>2728)) then local v186=0;local v187;local v188;local v189;local v190;local v191;local v192;while true do if ((v186==(4 -3)) or ((5473 -2034)==(3696 -1120))) then v189=nil;v190=nil;v186=2;end if ((v186==(0 -(0 -0))) or ((6674 -(1117 + 784))<=(563 + 561))) then v187=0 -0;v188=nil;v186=3 -2;end if ((v186==(859 -(77 + 779))) or (3309<1442)) then while true do if ((2406<=(4170 -(83 + 264))) and ((1139 -(124 + 1015))==v187)) then local v285=1620 -(1276 + 344);while true do if ((1556==1556) and (v285==(1 + 0))) then v187=1;break;end if (((450 -(184 + 266))==v285) or ((186 + 73)>=(4077 -(200 + 981)))) then v188=v88[2 + 0];v189=v88[10 -6];v285=4 -3;end end end if (((839 -427)<=(1433 + 1550)) and (v187==(1209 -(501 + 705)))) then if (v192 or (1915>(3717 + 882))) then local v311=0 -0;while true do if (((2654 -1917)<=(382 + 2664 + 249)) and (v311==(104 -(27 + 77)))) then v86[v190]=v192;v69=v88[3];break;end end else v69=v69 + 1 + 0;end break;end if ((1691<(6779 -3861)) and (v187==2)) then for v297=1 + 0,v189 do v86[v190 + v297]=v191[v297];end v192=v191[1 -0];v187=789 -(739 + 47);end if ((v187==(1 + (507 -(83 + 424)))) or ((4861 -3101)==2662)) then local v286=0 + 0;while true do if (((3516 -(826 + 1018))==1672) and (v286==(1 + 0))) then v187=1250 -(169 + 1079);break;end if ((v286==(1173 -(414 + 759))) or ((1230 -(381 + 274))>=(2568 + 964))) then v190=v188 + (1017 -(933 + 82));v191={v86[v188](v86[v188 + 1],v86[v190])};v286=1;end end end end break;end if ((v186==2) or ((904 + 1967 + 232)<=(521 + 1189))) then v191=nil;v192=nil;v186=4 -1;end end else local v193=0 + 0 + 0;local v194;while true do if (((3503 -2446)==(1871 -(648 + 166))) and (v193==(0 -0))) then v194=v88[1 + 1];v86[v194]=v86[v194](v13(v86,v194 + 1,v70));break;end end end elseif (((5528 -3518)>=1560) and (v89<=(43 -22))) then v86[v88[1191 -(843 + 346)]]=v86[v88[1219 -(1077 + (1633 -(730 + 764)))]]%v86[v88[4 + 0]];elseif (((238 + 2534)==(4818 -2046)) and (v89==22)) then local v195=0 + (510 -(280 + 230));local v196;while true do if ((v195==(0 + 0)) or ((11717 -9311)<=2302)) then v196=v88[9 -7];v86[v196]=v86[v196](v86[v196 + 1 + 0]);break;end end else local v197=0;local v198;local v199;local v200;local v201;while true do if ((v197==(785 -(58 + 390 + 336))) or ((4433 -1482)<(3946 -2144))) then v70=(v200 + v198) -(2 -1);v201=0 + 0 + (1008 -(649 + 359));v197=(345 -(80 + 263)) -(0 -0);end if ((((5149 -3000) -((2837 -1699) + 258))<(2152 + 444)) and (v197==(0 + 0))) then v198=v88[36 -(26 + 8)];v199,v200=v83(v86[v198](v13(v86,v198 + (299 -(15 + 283)),v70)));v197=1013 -(532 + 46 + 434);end if (((4005 + (1900 -(792 + 290)))<(6649 -(1711 + 91))) and (v197==((4 -2) -0))) then for v268=v198,v70 do local v269=0 + 0;local v270;local v271;while true do if (((1462 + 160)>(1132 -(553 + 294 + 53 + 14))) and ((0 -0)==v269)) then v270=678 -(331 + 347);v271=nil;v269=1 -0;end if ((v269==(1 + 0)) or (805>=(1000 + 2382))) then while true do if ((4171==(4276 -(31 + 74))) and (v270==(0 -(0 + 0)))) then v271=0;while true do if ((v271==(0 + 0)) or (2897>(7967 -4198))) then v201=v201 + 1 + 0;v86[v268]=v199[v201];break;end end break;end end break;end end end break;end end end elseif ((v89<=(83 -48)) or ((13 + 33)==(550 + 262))) then if (((492 + 3039)>=2934) and (v89<=(24 + 5))) then if (((1074 -(393 + 618))<=(514 + 2536)) and (v89<=(4 + 22))) then if (((2398 + 1050)>=(637 + 630)) and (v89<=(10 + 14))) then local v139=0;local v140;local v141;local v142;local v143;local v144;local v145;while true do if ((v139==3) or ((9931 -6528)<(982 -(442 + 372)))) then while true do if ((v140==(1 + (1462 -(1032 + 429)))) or ((4412 + 0)<(1810 -((2183 -1738) + 706 + 486)))) then v145=nil;while true do if ((v141==1) or ((4840 -(1891 + 99))>(1505 + 2804))) then local v299=0 -0;local v300;while true do if (((2767 -(448 + 1323))<(10751 -7790)) and (v299==(0 -0))) then v300=992 -(182 + 810);while true do if (((2671 + 20)>(2530 -(48 + 1081))) and (((2043 -452) -(324 + 1266))==v300)) then v141=3 -1;break;end if ((3817==(3635 + 133 + 49)) and (v300==0)) then v70=(v144 + v142) -(1382 -((308 -(99 + 123)) + 1295));v145=623 -(457 + 166);v300=1;end end break;end end end if ((v141==(174 -(103 + 71))) or ((5608 -(974 + 719))==(5805 -3744))) then local v301=1119 -(835 + 284);while true do if (((1718 + 1495 + 1554)>=(2093 -(893 + 33))) and (0==v301)) then v142=v88[4 -2];v143,v144=v83(v86[v142](v86[v142 + (1 -0)]));v301=143 -(119 + 23);end if (((10674 -6828)>=(4173 -2656)) and (v301==(1551 -(283 + 1267)))) then v141=1 -0;break;end end end if ((v141==(1262 -(639 + 621))) or ((5132 -(890 + 246 + 189))<=((3275 -(825 + 157)) -1164))) then for v312=v142,v70 do local v313=0 -0;local v314;while true do if (((1674 + 206)<=(3751 -1090)) and (v313==(878 -(679 + 199)))) then v314=0;while true do if ((v314==(0 -(1501 -(999 + 502)))) or (3519>=(3635 + 35 + 256))) then v145=v145 + 1 + 0;v86[v312]=v143[v145];break;end end break;end end end break;end end break;end if ((v140==((7 -4) -2)) or ((2368 -(1232 + 64))>2061)) then local v272=(754 + 719) -(669 + 804);while true do if (((1039 + (4636 -(288 + 1096)))>=(15765 -11955)) and (v272==(1 + 0))) then v140=(15 -11) -2;break;end if (((3576 -(281 + 974))>(1271 -(210 + 40))) and (v272==(527 -(490 + 37)))) then v143=nil;v144=nil;v272=528 -(397 + 130);end end end if ((2531>(2221 -(1186 + 805))) and (v140==(1425 -(633 + 792)))) then local v273=(397 + 136) -(403 + 130);while true do if ((v273==(551 -(487 + 64))) or (2418<=(5709 -4137))) then v141=0 -0;v142=nil;v273=(2 + 0) -1;end if ((3826==(4384 -(9 + 549))) and (v273==(1 -0))) then v140=1;break;end end end end break;end if (((624 + 94)==(1657 -939)) and (v139==(1522 -(1408 + 114)))) then v140=188 -(84 + 104);v141=nil;v139=1813 -(289 + 711 + 812);end if (((5913 -1837)>((9399 + 1186) -7336)) and (v139==(612 -(283 + 328)))) then v142=nil;v143=nil;v139=6 -4;end if (((5536 -(425 + 1198))>=(236 -134)) and (v139==2)) then v144=nil;v145=nil;v139=71 -(64 + 4);end end elseif ((v89>(82 -57)) or (4193<=1217)) then local v202=0 + 0;local v203;local v204;local v205;while true do if ((v202==(0 + 0)) or (400>(1126 + 256))) then v203=0;v204=nil;v202=1;end if ((v202==(1 -0)) or ((2868 + (711 -(298 + 167)))>(16676 -11879))) then v205=nil;while true do if (((6434 -4953)>=588) and (v203==(0 + 0))) then local v287=0 -0;while true do if ((v287==(1 + 0)) or ((335 -99)==3416)) then v203=1 + 0;break;end if (((2300 -1586)<=(2636 -(1564 + 68))) and (v287==(1169 -(1153 + (1933 -(334 + 1583)))))) then v204=v88[399 -(52 + 345)];v205=v86[v204];v287=1 + 0;end end end if ((v203==(1 -0)) or ((2717 -(7 + 590))>=(10525 -6561))) then for v302=v204 + (2 -1),v88[3] do v8(v205,v86[v302]);end break;end end break;end end else local v206=943 -(862 + 81);local v207;local v208;local v209;local v210;while true do if ((v206==0) or ((11292 -6337)<1517)) then v207=v88[2 + 0 + 0];v208,v209=v83(v86[v207](v13(v86,v207 + (1080 -(264 + 815)),v88[950 -(587 + 209 + 151)])));v206=(1472 -(1417 + 53)) -1;end if ((v206==(2 + (0 -0))) or (3743<=(714 -502))) then for v274=v207,v70 do local v275=0 -0;local v276;while true do if ((v275==(1677 -(985 + 692))) or ((836 + 2700)>4586)) then v276=1758 -(1005 + 753);while true do if ((v276==(0 + 0)) or ((16159 -12828)>=3491)) then v210=v210 + 1 + 0;v86[v274]=v208[v210];break;end end break;end end end break;end if (((3944 -(143 + 161 + 1509))<(1100 + 3444)) and ((221 -(84 + 136))==v206)) then v70=(v209 + v207) -(114 -(62 + 51));v210=0 + 0;v206=1875 -(570 + 1303);end end end elseif (((700 -(61 + 304))<=(2290 -(1376 + 503))) and (v89<=(34 -(15 -8)))) then local v146=0 + 0;local v147;local v148;while true do if ((v146==1) or ((114 + (1118 -(393 + 694)))<=(38 -17))) then while true do if ((v147==((0 -0) -0)) or ((2780 -(821 + 215))>=(2114 + 623))) then v148=v88[2 + 0];v86[v148]=v86[v148]();break;end end break;end if (((679 + 259)<(3271 -(15 + 124 + 541))) and (v146==(1496 -(383 + 1113)))) then v147=0;v148=nil;v146=662 -(534 + 127);end end elseif ((v89>(97 -69)) or ((4993 -1790)==(12308 -8619))) then local v211=95 -(90 + 5);local v212;local v213;local v214;local v215;while true do if ((v211==(187 -(110 + 76))) or ((1792 + 1346)<(1506 + (1879 -(316 + 206))))) then v214=nil;v215=nil;v211=2;end if (((772 + (2362 -(911 + 420)))==(2036 -(11 + 222))) and (v211==(0 -(0 -0)))) then local v258=0;while true do if ((v258==(1 + 0)) or ((2022 -(491 + 223))>=(1938 + 1835))) then v211=(47 + 698) -(93 + 651);break;end if ((v258==(0 + 0)) or (((2700 -(166 + 133)) + 1889)==(3702 -(917 + 368)))) then v212=0 -0;v213=nil;v258=1 -0;end end end if ((v211==2) or (((2538 -(249 + 697)) -1260)>=(7023 -3842))) then while true do if ((2614<(5067 -886)) and ((1073 -(280 + (1959 -(542 + 625))))==v212)) then v215=0;for v303=v213,v88[7 -3] do local v304=0 -(0 + 0);while true do if (((3155 + 742)==(11424 -7527)) and (v304==(0 + 0 + (0 -0)))) then v215=v215 + (474 -(169 + (1590 -(798 + 488))));v86[v303]=v214[v215];break;end end end break;end if (((10848 -7109)==3739) and (v212==0)) then local v288=0;while true do if ((v288==(0 + 0)) or ((1127 -((183 -100) + 487))>=(1699 -(905 + 19)))) then local v320=1286 -(1106 + 180);while true do if ((v320==((2 -1) + (0 -0))) or ((3007 -(427 + 145))>((13076 -9112) -(6 + 28)))) then v288=(1 + 1) -1;break;end if ((0==v320) or (((24520 -17539) -3551)>=(17535 -13401))) then v213=v88[4 -2];v214={v86[v213](v86[v213 + 1 + 0])};v320=1 + 0;end end end if ((v288==(2 -1)) or ((6804 -4847)==(497 + 1236))) then v212=1 + 0;break;end end end end break;end end else v37[v88[3 + 0]]=v86[v88[5 -3]];end elseif ((v89<=(16 + 16)) or ((599 -370)>=(3802 -(1340 + 383)))) then if ((v89<=30) or ((6894 -4796)<(4587 -2654))) then v86[v88[2]]=v86[v88[226 -(60 + 163)]]%v88[1 + (8 -5)];elseif (((3032 + 85)>=(1253 -818)) and (v89==31)) then v86[v88[(245 -72) -(111 + 60)]]=v37[v88[1 + 2]];else local v218=0 -0;local v219;local v220;while true do if ((v218==(0 + 0 + 0)) or ((4115 -(932 + 1019))>=(3492 -(16 + 37)))) then v219=0 + 0;v220=nil;v218=2 -1;end if (((9701 -6120)>=(102 + 147)) and (v218==(1 + 0))) then while true do if ((v219==((1511 -(195 + 1316)) + 0)) or (3028>3909)) then v220=v86[v88[627 -(104 + 456 + 63)]];if ( not v220 or ((6930 -4651)>(10556 -5660))) then InstrPoint=InstrPoint + 1;else local v315=0;local v316;local v317;while true do if (((6522 -2727)<=(16529 -11907)) and (v315==(4 -3))) then while true do if ((v316==0) or ((1641 + 1248)<=1502)) then v317=0 + 0;while true do if (((23614 -18775)>=(5174 -(4 + 1707))) and (v317==(0 -(789 -(616 + 173))))) then v86[v88[2]]=v220;InstrPoint=v88[6 -3];break;end end break;end end break;end if ((v315==(773 -(624 + 99 + 50))) or ((14392 -10501)<=(6718 -4109))) then v316=0;v317=nil;v315=1 -0;end end end break;end end break;end end end elseif ((v89<=33) or ((3783 + 729)<(820 + (4755 -(829 + 595))))) then if (((3409 -2133)<(3882 -(262 + 236))) and (v86[v88[2]]==v88[4])) then v69=v69 + 1 + 0;else v69=v88[110 -(80 + (54 -27))];end elseif ((4828>=(168 + 340 + 30)) and (v89==(1677 -(272 + 1371)))) then if (((2017 -(368 + 346))<=((11850 -5994) -4447)) and (v88[1 + 1]==v86[v88[19 -15]])) then v69=v69 + 1;else v69=v88[(1038 -(791 + 246)) + 2];end else do return;end end elseif (((6115 -3977)<=(4927 -(70 + 238))) and (v89<=41)) then if ((((786 -527) + (8219 -3740))>(8128 -4800)) and (v89<=(53 -15))) then if ((v89<=36) or ((2588 -(971 + 79))==(653 -288))) then v86[v88[3 -1]]= #v86[v88[1898 -(1076 + 819)]];elseif (((4970 -(27 + 269))>4263) and (v89>37)) then local v221=0 -0;local v222;local v223;local v224;local v225;while true do if (((3576 -(1511 + 938))==1127) and (v221==(0 + 0))) then v222=0 -0;v223=nil;v221=597 -(594 + 2);end if ((v221==1) or ((8329 -5921)>=(4293 + 630))) then v224=nil;v225=nil;v221=6 -4;end if (((2765 + 1183)==(2241 + 1707)) and (v221==(7 -5))) then while true do if ((v222==0) or ((4943 -3169)==(787 + 1298))) then local v289=0;while true do if (((2219 + 1415)<=4616) and (v289==(0 -0))) then v223=v88[1 + 1];v224={v86[v223](v13(v86,v223 + (795 -(766 + 28)),v70))};v289=(2 + 0) -1;end if ((v289==1) or ((4133 -(3623 -(737 + 1156)))>4931)) then v222=(1 + 3) -3;break;end end end if ((v222==(1224 -(226 + 997))) or ((2414 + 466)==(5020 -(49 + 437)))) then v225=745 -(74 + 671);for v305=v223,v88[1445 -(1067 + (940 -(446 + 120)))] do local v306=0 -0;local v307;while true do if ((v306==(0 + 0)) or ((291 + 49)>3158)) then v307=1672 -((3061 -(1194 + 360)) + 165);while true do if (((4004 + 175)>=1129) and (v307==((0 + 0) -0))) then v225=v225 + (2 -1);v86[v305]=v224[v225];break;end end break;end end end break;end end break;end end else v86[v88[1456 -(1267 + 187)]]();end elseif ((v89<=(121 -(196 -(25 + 89)))) or ((300 + 156)>(5547 -1417))) then v86[v88[1095 -(169 + 924)]]={};elseif ((v89==(12 + 28)) or ((3048 + 387)<=(2399 -(539 + 378)))) then v86[v88[4 -2]]=v86[v88[3]] -v88[4];else v69=v88[1 + 2];end elseif ((3719==(8550 -4831)) and (v89<=(16 + (72 -44)))) then if ((v89<=(1795 -(1484 + 269))) or (3204==(6354 -(439 + 917)))) then if (((4480 -(391 + 1463))==2626) and  not v86[v88[551 -(223 + 326)]]) then v69=v69 + 1 + 0;else v69=v88[1587 -(435 + 1149)];end elseif ((v89==(60 -17)) or (1279<((2011 -(1019 + 793)) + 1007))) then local v227=0 -0;local v228;local v229;local v230;local v231;while true do if ((v227==((5064 -3264) -((1105 -(657 + 443)) + 1793))) or ((3340 -(159 + 543))>=(10147 -(4832 + 2443)))) then while true do if (((0 -0)==v228) or (3229>=(16685 -11972))) then local v290=0 + (1283 -(600 + 683));while true do if ((v290==(0 + 0 + 0)) or ((3452 + 398)>((14712 -8983) -(851 + (338 -(6 + 4)))))) then v229=0;v230=nil;v290=1868 -(1819 + 48);end if (((1937 + 336)<(10186 -7456)) and (v290==((682 + 1047) -(970 + 758)))) then v228=1 + 0;break;end end end if (((16460 -11971)>(2594 -1552)) and (v228==(1 -0))) then v231=nil;while true do if (((5472 -2390)>((1442 + 10) -601)) and (v229==1)) then v86[v230 + 1]=v231;v86[v230]=v231[v88[1922 -((160 -81) + 1839)]];break;end if ((1964>=1882) and (v229==((1981 -(843 + 1138)) + 0))) then local v323=0 -0;while true do if ((v323==(0 + 0)) or ((1254 + 565)==(4905 -2494))) then v230=v88[1424 -(483 + 939)];v231=v86[v88[674 -(306 + 365)]];v323=2 -1;end if ((v323==(1 + 0)) or (1053==(2057 -(32 + 321)))) then v229=1536 -(94 + 1441);break;end end end end break;end end break;end if (((2942 + 686)>(193 + 49)) and ((770 -(589 + 180))==v227)) then v230=nil;v231=nil;v227=2 + (0 -0);end if (((842 -(31 + 811))==v227) or (((21371 -(866 + 735)) -14962)==1819)) then v228=478 -(110 + 368);v229=nil;v227=1;end end else v86[v88[2]]=v36[v88[3]];end elseif (((2718 + 1175)>(15345 -(36454 -24966))) and (v89<=(23 + 23))) then if (((4079 -2332)>=(4849 -3226)) and (v89>(117 -(53 + 19)))) then if ((v86[v88[5 -3]]~=v86[v88[3 + (1731 -(1524 + 206))]]) or ((6122 -(1214 + 4))<(1045 -(341 + 40)))) then v69=v69 + (331 -(51 + 279));else v69=v88[6 -(1778 -(1200 + 575))];end elseif (((4531 -(635 + 1336))>=(3163 -(716 + 317))) and (v86[v88[3 -1]]==v86[v88[611 -(77 + 530)]])) then v69=v69 + (1 -(0 + 0));else v69=v88[3];end elseif (((3301 -(584 + 1281))<4091) and (v89==47)) then v86[v88[2]]=v86[v88[508 -(215 + 290)]];else local v234=0 -0;local v235;while true do if ((3210>=(309 -(22 + 220))) and (v234==(0 + 0))) then v235=v88[1501 -(1289 + 210)];v86[v235](v86[v235 + (1 -(0 -0))]);break;end end end v69=v69 + 1 + 0;break;end if ((v92==0) or ((5021 -(78 + 481))<((313 + 723) -659))) then local v105=0 -0;local v106;while true do if ((v105==0) or ((4540 -1718)==1369)) then v106=0 -0;while true do if ((v106==1) or ((3485 -(1070 + 624))<=(1145 -235))) then v92=506 -(66 + 439);break;end if ((v106==(0 + (0 -0))) or ((9939 -6171)==(2617 + 1045))) then v88=v79[v69];v89=v88[1 + 0];v106=1407 -(247 + 1159);end end break;end end end end break;end end end end v68=3;end if (v68==0) then v69=1;v70= -1;v68=1;end end end;end return v29(v28(),{},v17)();end v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end end end