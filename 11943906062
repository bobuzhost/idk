--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then local v80=0;while true do if (0==v80) then v28=v1(v4(v29,1,1));return "";end end else local v81=v3(v1(v29,16));if v28 then local v98=v6(v81,v28);v28=nil;return v98;else return v81;end end end);local function v30(v31,v32,v33)if v33 then local v82=(v31/(((2310 -(172 + 310)) -(176 + 1650))^(v32-1)))%((1 + 1)^(((v33-(2 -1)) -(v32-(899 -(328 + (811 -241))))) + (2 -1))) ;return v82-(v82%(624 -(466 + 157))) ;else local v83=(1684 -(1293 + 389))^(v32-(1 + 0)) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (0 -0) ;end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + 1 + 1 );v27=v27 + (2 -0) ;return (v49 * (850 -594)) + v48 ;end local function v36()local v50,v51,v52,v53=v2(v25,v27,v27 + (1803 -(1665 + 135)) );v27=v27 + 2 + 2 + 0 ;return (v53 * (16777359 -(140 + 3))) + (v52 * (66599 -(330 + 733))) + (v51 * 256) + v50 ;end local function v37()local v54=v36();local v55=v36();local v56=1;local v57=(v30(v55,1,111 -(30 + 61) ) * ((2 + 0)^(933 -(586 + 315)))) + v54 ;local v58=v30(v55,59 -38 ,199 -((165 -(21 + 67)) + 91) );local v59=((v30(v55,2004 -(1087 + 885) )==(1047 -(308 + 738))) and  -(2 -1)) or (2 -1) ;if (v58==(0 -0)) then if (v57==(50 -(48 + 2))) then return v59 * (0 + 0) ;else local v99=1141 -(516 + 625) ;while true do if (v99==0) then v58=1 -0 ;v56=0 -0 ;break;end end end elseif (v58==2047) then return ((v57==0) and (v59 * (((1994 -(9 + 40)) -(1103 + 841))/(394 -(153 + 241))))) or (v59 * NaN) ;end return v9(v59,v58-(560 + 463) ) * (v56 + (v57/((798 -(546 + 250))^((234 + 19) -201)))) ;end local function v38(v39)local v60=61 -(30 + 0 + 31) ;local v61;local v62;while true do if (v60==((967 -(205 + 761)) + 1)) then v62={};for v100=330 -(242 + 87) , #v61 do v62[v100]=v3(v2(v4(v61,v100,v100)));end v60=259 -(215 + (1094 -(135 + 918))) ;end if (v60==(1799 -(1136 + 660))) then return v7(v62);end if (v60==(2 -1)) then v61=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;v60=2;end if (v60==0) then v61=nil;if  not v39 then v39=v36();if (v39==(0 + 0)) then return "";end end v60=1;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=1710 -(978 + 732) ;local v64;local v65;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v63==(757 -(712 + 43))) then v68=nil;v69=nil;v63=6 -3 ;end if (3==v63) then v70=nil;v71=nil;v63=1 + 3 ;end if (v63==(1 + 0)) then v66=nil;v67=nil;v63=171 -(36 + 133) ;end if (v63==(1226 -(827 + 395))) then while true do if (v64==(155 -(27 + 128))) then v65=472 -(399 + 73) ;v66=nil;v64=1 -0 ;end if (v64==1) then v67=nil;v68=nil;v64=2;end if ((1 + 2)==v64) then v71=nil;while true do if (v65==(0 + 0)) then local v106=766 -(22 + 744) ;while true do if (v106==0) then local v123=0 + 0 ;while true do if (v123~=(0 + 0)) then else v66={};v67={};v123=1 + 0 ;end if (v123~=(1 + 0)) then else v106=1978 -(1730 + 247) ;break;end end end if (v106~=(2 -1)) then else local v124=0 -0 ;while true do if (v124~=(0 -0)) then else v68={};v69={v66,v67,nil,v68};v124=1 + 0 ;end if (v124==(3 -2)) then v106=5 -3 ;break;end end end if (v106~=(1873 -(395 + 1476))) then else v65=1 + 0 ;break;end end end if (v65==2) then for v109=173 -(8 + 164) ,v36() do local v110=0 + 0 ;local v111;local v112;while true do if (v110~=(748 -(542 + 206))) then else v111=0 -0 ;v112=nil;v110=1;end if (v110~=(1946 -(140 + 1805))) then else while true do if (v111==(0 -0)) then v112=v34();if (v30(v112,1 -0 ,1)==(0 -0)) then local v129=0 + 0 ;local v130;local v131;local v132;local v133;while true do if (v129~=(1486 -(788 + 696))) then else while true do if (v130==(464 -(427 + 34))) then if (v30(v132,3,1 + 2 )~=(1194 -(132 + 1061))) then else v133[7 -3 ]=v71[v133[1181 -(366 + 811) ]];end v66[v109]=v133;break;end if (v130~=(0 + 0)) then else local v283=0 + 0 ;while true do if (v283==0) then local v318=1729 -(1597 + 132) ;while true do if (v318==0) then v131=v30(v112,2 + 0 ,768 -(225 + 540) );v132=v30(v112,1531 -(559 + 968) ,11 -5 );v318=1 -0 ;end if (v318==(1 -0)) then v283=1 + 0 ;break;end end end if (v283~=(1 + 0)) then else v130=2 -1 ;break;end end end if (v130==(1 -0)) then local v284=0;local v285;while true do if ((0 + 0)==v284) then v285=785 -(387 + 398) ;while true do if (v285==(715 -(656 + 59))) then local v381=414 -(174 + 240) ;while true do if ((1 + 0)==v381) then v285=1;break;end if (v381==(912 -(509 + 403))) then v133={v35(),v35(),nil,nil};if (v131==(0 -0)) then local v426=0 -0 ;while true do if (v426==(0 + 0)) then v133[6 -3 ]=v35();v133[4 + 0 ]=v35();break;end end elseif (v131==(2 -1)) then v133[837 -(673 + 161) ]=v36();elseif (v131==2) then v133[3]=v36() -((6 -4)^(1986 -(1680 + 290))) ;elseif (v131==(10 -7)) then local v463=0 -0 ;while true do if (v463==(0 + 0)) then v133[4 -1 ]=v36() -((2 -0)^(5 + 11)) ;v133[5 -1 ]=v35();break;end end end v381=1 + 0 ;end end end if (v285==(1 + 0)) then v130=9 -7 ;break;end end break;end end end if (v130==(1 + 1)) then local v286=0;while true do if (v286==(0 -0)) then local v319=0 + 0 ;local v320;while true do if (v319==0) then v320=0 + 0 ;while true do if (v320==(4 -3)) then v286=2 -1 ;break;end if (v320==0) then local v415=1232 -(178 + 1054) ;while true do if (v415~=(360 -(161 + 198))) then else v320=1;break;end if (v415==(0 + 0)) then if (v30(v132,1419 -(560 + 858) ,1943 -(1062 + 880) )~=(72 -(24 + 47))) then else v133[2]=v71[v133[2 + 0 ]];end if (v30(v132,2,2)==(1 -0)) then v133[3]=v71[v133[4 -1 ]];end v415=1;end end end end break;end end end if (v286~=(703 -(523 + 179))) then else v130=3;break;end end end end break;end if (v129==(0 + 0)) then local v182=0 + 0 ;local v183;while true do if (v182==(353 -(267 + 86))) then v183=0 -0 ;while true do if (v183~=(1134 -(59 + 1075))) then else local v321=0 -0 ;while true do if (v321==0) then v130=0;v131=nil;v321=179 -(139 + 39) ;end if (v321~=(3 -2)) then else v183=1;break;end end end if (v183==(1 + 0)) then v129=1;break;end end break;end end end if (v129==(620 -(509 + 110))) then local v184=0 + 0 ;while true do if ((2 -1)==v184) then v129=592 -(425 + 165) ;break;end if (v184~=(1935 -(497 + 1438))) then else local v287=1767 -(852 + 915) ;while true do if ((0 -0)==v287) then v132=nil;v133=nil;v287=1 + 0 ;end if (v287~=(1 -0)) then else v184=162 -(84 + 77) ;break;end end end end end end end break;end end break;end end end for v113=1,v36() do v67[v113-(583 -(534 + 48)) ]=v42();end for v115=1,v36() do v68[v115]=v36();end return v69;end if (v65==(2 -1)) then v70=v36();v71={};for v117=1 -0 ,v70 do local v118=0 -0 ;local v119;local v120;local v121;local v122;while true do if (v118==(15 -(5 + 8))) then while true do if (v119==(1647 -(1102 + 544))) then v122=nil;while true do if ((1 -0)==v120) then if (v121==(1894 -(1274 + 619))) then v122=v34()~=(0 + 0) ;elseif (v121==(1 + 1)) then v122=v37();elseif (v121~=(594 -(568 + 23))) then else v122=v38();end v71[v117]=v122;break;end if ((0 + 0)~=v120) then else local v135=1550 -(433 + 1117) ;local v136;while true do if (v135==0) then v136=1377 -(442 + 935) ;while true do if (v136~=0) then else v121=v34();v122=nil;v136=1 + 0 ;end if (v136~=(543 -(313 + 229))) then else v120=1 -0 ;break;end end break;end end end end break;end if (v119~=0) then else local v128=0;while true do if (v128==(0 + 0)) then v120=0;v121=nil;v128=1;end if (v128==1) then v119=2 -1 ;break;end end end end break;end if (v118==0) then v119=0 + 0 ;v120=nil;v118=1300 -(120 + 1179) ;end if (v118~=(2 -1)) then else v121=nil;v122=nil;v118=1835 -(1490 + 343) ;end end end v69[3 + 0 ]=v34();v65=6 -4 ;end end break;end if (v64==(1 + 1)) then v69=nil;v70=nil;v64=3;end end break;end if (v63==0) then v64=0 + 0 ;v65=nil;v63=2 -1 ;end end end local function v43(v44,v45,v46)local v72=v44[1];local v73=v44[2];local v74=v44[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v13("#",...) -1 ;local function v79()local v84=v72;local v85=v73;local v86=v74;local v87=v41;local v88={};local v89={};local v90={};for v94=0 + 0 ,v78 do if ((4769>=(4643 -(16 + 265))) and (v94>=v86)) then v88[v94-v86 ]=v77[v94 + ((337 + 58) -(264 + 130)) ];else v90[v94]=v77[v94 + 1 + 0 ];end end local v91=(v78-v86) + 1 + 0 ;local v92;local v93;while true do local v95=1473 -(548 + 925) ;local v96;while true do if ((v95==(0 + 0)) or ((4509 -(1500 + 271))==2886)) then v96=0 -0 ;while true do if (((4678 -3422)>1211) and (v96==0)) then local v108=0;while true do if ((v108==((2772 -1561) -(230 + 981))) or (2088>=3452)) then local v125=0 -0 ;while true do if ((v125==(1 + 0)) or (((7101 -(713 + 421)) -(3411 -(98 + 343)))<(3336 -(1107 + 105)))) then v108=1;break;end if ((v125==0) or (2062<=(1517 + (583 -386)))) then v92=v84[v75];v93=v92[1 + (1799 -(137 + 1662)) ];v125=1 + (1735 -(276 + 1459)) ;end end end if (((5141 -((1288 -(921 + 251)) + 145))==4880) and (v108==(1 + 0))) then v96=1 + 0 ;break;end end end if ((v96==(713 -((1672 -(1025 + 250)) + 315))) or (((2008 -(888 + 775)) + 587)>(2657 + 1638))) then if (((8208 -4511)>(3777 -(116 + 113))) and (v93<=(1 + 23))) then if ((2828<=(3772 -(217 + 44))) and (v93<=(1771 -(1621 + (254 -115))))) then if ((2139<=(6629 -2938)) and (v93<=5)) then if ((v93<=(7 -5)) or ((5331 -(1138 + 470))>=(8920 -4990))) then if ((789==789) and (v93<=(0 + 0))) then local v137=0 -0 ;local v138;local v139;local v140;local v141;local v142;while true do if ((4311==4311) and ((4 -2)==v137)) then v142=nil;while true do if ((v138==(150 -(44 + 104))) or ((1953 + 974)<=(9 + 86))) then while true do if (((0 + 0)==v139) or (((3867 -(1648 + 83)) -(636 + 1272))>(3987 -((2165 -(861 + 1109)) + 1552)))) then local v347=0 + 0 ;local v348;while true do if ((v347==(0 -0)) or ((2556 -(116 + 926))>=(5254 -((1098 -(35 + 641)) + 153)))) then v348=0 -0 ;while true do if (((7399 -4097)<=4280) and ((1171 -(834 + 336))==v348)) then v139=1 + 0 + 0 ;break;end if (((3419 -(119 + 318))==((4087 + 51) -(1065 + 91))) and (v348==(0 -0))) then local v420=1220 -(581 + 639) ;while true do if ((983<(4641 -(808 + 966))) and (v420==0)) then v140=v92[2];v141={v90[v140](v90[v140 + 1 + 0 ])};v420=863 -(616 + 246) ;end if ((v420==(1 + 0 + 0)) or ((5137 -(393 + 433))<(3995 -1054))) then v348=1 + (0 -0) ;break;end end end end break;end end end if ((v139==(2 -1)) or ((5609 -(581 + 860))==3503)) then v142=0 + 0 ;for v367=v140,v92[7 -3 ] do local v368=0;local v369;while true do if ((((0 -0) + 0)==v368) or (((1806 + 97) -1280)<575)) then v369=0;while true do if (((5119 -(128 + 1231 + 593))<(2101 + 1293)) and (v369==(0 -0))) then v142=v142 + 1 ;v90[v367]=v141[v142];break;end end break;end end end break;end end break;end if (((1007 -(65 + 224))==(3495 -2777)) and (v138==(1158 -(11 + 5 + 1142)))) then v139=0;v140=nil;v138=2 -(2 -1) ;end if (((11761 -7466)>=3465) and (v138==(1 + 0))) then v141=nil;v142=nil;v138=2 + 0 ;end end break;end if ((v137==(0 + 0)) or ((18339 -13821)==1991)) then v138=(0 -0) -0 ;v139=nil;v137=1 + 0 ;end if (((2895 -795)<2819) and (v137==(1 + 0))) then v140=nil;v141=nil;v137=1614 -(322 + 1290) ;end end elseif ((v93==(1 + 0)) or (771==(2622 + 1930))) then if (((123 + 1964)<=(1121 + 1276)) and (v90[v92[4 -2 ]]==v90[v92[4 + 0 ]])) then v75=v75 + 1 ;else v75=v92[1338 -(586 + 749) ];end else v90[v92[2]]=v45[v92[5 -2 ]];end elseif (((1771 + 419)<2704) and (v93<=3)) then local v143=0 + 0 ;local v144;local v145;local v146;while true do if ((v143==(1 -0)) or ((5044 -((1202 -(131 + 825)) + 11))==(5101 -(337 + 614)))) then v146=nil;while true do if (((2822 -1546)<=((3590 + 6969) -6447)) and (v144==(1922 -(80 + 1841)))) then while true do if ((3438>=(2407 -(848 + 1084))) and (v145==(377 -(36 + 341)))) then v146=v92[1273 -(297 + 974) ];v90[v146](v90[v146 + (1 -0) ]);break;end end break;end if ((v144==(1658 -(559 + 143 + 956))) or (250>=(2182 -(948 + 51)))) then local v290=(2717 -(127 + 999)) -(915 + 676) ;while true do if ((v290==(1 -0)) or ((3345 -830)>(2451 + 816))) then v144=1 + 0 ;break;end if ((v290==0) or (2475<=(1454 + 893))) then v145=724 -(538 + 186) ;v146=nil;v290=1 + 0 ;end end end end break;end if (((2080 -525)<2907) and (v143==0)) then v144=0 + 0 ;v145=nil;v143=2 -1 ;end end elseif ((v93>(1 + 3)) or (1779==4995)) then local v187=0;local v188;local v189;local v190;local v191;while true do if ((v187==1) or ((1492 + 1114)<=(1632 -(1342 + 47)))) then v190=nil;v191=nil;v187=2 + 0 ;end if ((1929<2900) and (v187==(290 -(189 + 99)))) then while true do if ((((2011 -1104) + 3379)>4001) and (v188==(0 -0))) then local v322=0;while true do if ((4031>(475 + 57)) and ((1 -(0 -0))==v322)) then v188=1006 -(310 + 695) ;break;end if (((2510 -1258)<=2654) and (v322==(1292 -(816 + 476)))) then v189=1305 -(1281 + 24) ;v190=nil;v322=4 -3 ;end end end if ((v188==(1 + 0)) or ((2115 + 2866)<(2978 -785))) then v191=nil;while true do if ((v189==(1 + 0)) or ((4713 -(809 + 501))<(644 + 225))) then for v399=v190 + (4 -3) ,v92[4] do v191=v191   .. v90[v399] ;end v90[v92[1 + 1 ]]=v191;break;end if (((4602 -2981)<=(9218 -5443)) and (v189==((1263 -319) -(673 + 271)))) then local v383=0;while true do if (((4239 -((903 -(305 + 261)) + 65))==(5536 -(344 + 1355))) and (v383==(1 -0))) then v189=1 + 0 + 0 ;break;end if ((v383==(1028 -((2634 -(1430 + 549)) + 328 + 45))) or (2570==(2222 -(144 + 75)))) then v190=v92[3];v191=v90[v190];v383=1830 -(1406 + 423) ;end end end end break;end end break;end if ((v187==0) or ((7300 -5044)>=(3904 -(381 + 407)))) then v188=0 + 0 + 0 ;v189=nil;v187=2 -1 ;end end else do return;end end elseif ((v93<=((1711 -(415 + 1277)) -11)) or (1299>=(5319 -((3134 -2208) + 222)))) then if ((v93<=(4 + 2)) or ((290 + 1973)==((10851 -(286 + 503)) -6653))) then if (v90[v92[2 + 0 ]] or ((2100 + 2201)<=1163)) then v75=v75 + 1 + 0 ;else v75=v92[7 -4 ];end elseif ((v93>(1835 -(835 + 993))) or ((274 -202)==(4677 -(1124 + 757)))) then v90[v92[5 -3 ]]=v90[v92[1172 -(466 + 703) ]] -v92[1 + 2 + 1 ] ;else v90[v92[2]]=v92[508 -(414 + 91) ];end elseif ((v93<=9) or ((1912 -(42 + 389))>=2754)) then local v147=1518 -(1316 + 202) ;local v148;local v149;local v150;local v151;while true do if (((577 + 1493)<(243 + 2241)) and (v147==(7 -5))) then while true do if (((583 + 113)<((5520 -3305) -(1012 + 5))) and (v148==(0 + 0))) then local v291=0 -0 ;while true do if ((v291==1) or ((4991 -(1103 + 533))>((11434 -5759) -(1714 + 115)))) then v148=1;break;end if (((3118 -(178 + 1454))==((4994 -(848 + 462)) -2198)) and (v291==(0 -0))) then v149=v92[2 + 0 ];v150=v90[v149 + (3 -1) ];v291=1014 -(507 + 506) ;end end end if ((v148==(4 -3)) or ((2641 -(1217 + 541))<((2004 + 961) -2144))) then v151=v90[v149] + v150 ;v90[v149]=v151;v148=2 -0 ;end if (((1193 + 1384)<4569) and (v148==2)) then if ((v150>(770 -(550 + 220))) or (1897>(11361 -6876))) then if ((v151<=v90[v149 + 1 + 0 ]) or (4187<=((3411 -(1765 + 74)) + 1525))) then local v370=624 -(586 + 38) ;local v371;while true do if ((v370==(0 + 0)) or ((5022 -2349)<=2464)) then v371=1601 -(624 + 977) ;while true do if (((4869 -(2369 + 418))<=(5859 -3127)) and (v371==(1957 -(1311 + 646)))) then v75=v92[698 -(601 + (334 -240)) ];v90[v149 + ((46 + 916) -(72 + 887)) ]=v151;break;end end break;end end end elseif ((v151>=v90[v149 + 1 ]) or ((4722 -(1121 + 382))>(2503 + 1681))) then local v372=0 -0 ;local v373;while true do if (((2671 -(63 + 1861))==(344 + 137 + 266)) and (v372==(0 -0))) then v373=(661 -(208 + 453)) + 0 ;while true do if (((1629 -(411 + 1218))==v373) or ((3294 -(1361 + 258))==(3892 -((526 -272) + 144)))) then v75=v92[8 -5 ];v90[v149 + 3 + 0 + 0 ]=v151;break;end end break;end end end break;end end break;end if ((v147==(2 -1)) or ((10475 -7675)>(526 + 3096))) then v150=nil;v151=nil;v147=788 -(454 + 332) ;end if ((v147==((20 + 736) -(725 + 31))) or ((762 -(677 + (1325 -(864 + 432))))>(3264 + 825))) then v148=0;v149=nil;v147=(205 -(45 + 159)) + 0 ;end end elseif ((v93>(940 -(819 + 111))) or (((4445 -(420 + 519)) + 1216)<=1732)) then local v196=1314 -(689 + 625) ;local v197;while true do if ((v196==(470 -(149 + 321))) or (((198 + 34) -119)>(2806 + 1169))) then v197=v92[2];v90[v197](v14(v90,v197 + 1 ,v76));break;end end else for v273=v92[1419 -((2248 -1278) + 447) ],v92[3 -0 ] do v90[v273]=nil;end end elseif ((v93<=(1463 -(234 + (2821 -1609)))) or ((6250 -1908)<=4068)) then if ((1524<(6330 -3627)) and (v93<=(67 -(53 + 0)))) then if (((1989 + (4134 -(805 + 525)))==(5429 -(454 + 182))) and (v93<=(4 + 8))) then v90[v92[2]]=v90[v92[1 + 2 ]]%v92[4] ;elseif ((v93>13) or ((3590 -1822)>=(2317 + 147))) then if ((2447<=(815 + 2526)) and (v90[v92[1652 -(327 + 1323) ]]~=v90[v92[3 + 1 ]])) then v75=v75 + 1 ;else v75=v92[5 -2 ];end elseif (((1819 -(1204 + 152))<=((96 + 1935) -(455 + 395))) and (v90[v92[2]]==v92[75 -(7 + 64) ])) then v75=v75 + 1 + 0 ;else v75=v92[1 + 2 ];end elseif ((v93<=15) or ((3637 + 1144)==(3888 -(716 + 24)))) then v90[v92[1 + 1 ]]();elseif (((2551 + 311)>(488 -(120 + 17))) and (v93>(6 + 10))) then local v198=(0 -0) + 0 ;local v199;local v200;while true do if (((1724 + (734 -(98 + 138)))<=(4677 -(393 + 868))) and ((1574 -(758 + 815))==v198)) then while true do if ((v199==(0 + 0)) or ((4251 -2657)>=(119 + 1998))) then v200=v90[v92[530 -(345 + 181) ]];if ( not v200 or ((6474 -4178)<218)) then v75=v75 + ((1505 -(115 + 479)) -(74 + 836)) ;else local v374=1310 -((1549 -(207 + 462)) + 430) ;local v375;local v376;while true do if (((3 -2)==v374) or ((2488 -879)<(1524 -(41 + 185 + 70)))) then while true do if (((1264 -(706 + 476))<=286) and (v375==0)) then v376=290 -(246 + 44) ;while true do if ((v376==0) or (((7282 -2125) -(87 + 1449))<(187 -(1473 -(78 + 1258))))) then v90[v92[2 + 0 ]]=v200;v75=v92[10 -7 ];break;end end break;end end break;end if (((72 + 92)<(4408 -3129)) and (v374==0)) then v375=(0 -0) + (0 -0) ;v376=nil;v374=1 + 0 ;end end end break;end end break;end if ((v198==(0 -0)) or ((2239 + 769)==((5882 -1883) -2982))) then v199=0 -0 ;v200=nil;v198=3 -2 ;end end else local v201=1471 -(246 + 1225) ;local v202;local v203;local v204;local v205;local v206;local v207;while true do if (((4316 -(562 + 336))>=1147) and (v201==1)) then v204=nil;v205=nil;v201=2 + 0 ;end if (((5210 -3412)<(3776 -(879 + 846))) and (v201==(4 -1))) then while true do if ((v202==1) or (4547<(4588 -(49 + 809)))) then local v324=0 -0 ;while true do if ((747<=2708) and (v324==((1864 -(247 + 1617)) + 0))) then v205=nil;v206=nil;v324=1 + 0 + 0 ;end if ((v324==((2 -1) + (555 -(316 + 239)))) or ((4796 -3641)>4638)) then v202=2 + 0 ;break;end end end if ((((6989 -4179) + 642)==3452) and (v202==(3 -1))) then v207=nil;while true do if (((690 + 920 + 235)==(952 + 893)) and (v203==1)) then local v384=0;local v385;while true do if ((((58541 -44493) -10772)>(1367 -730)) and (v384==(0 + 0))) then v385=0 + 0 + 0 ;while true do if (((3554 -(239 + 1036))>(1456 + (1513 -978))) and (v385==1)) then v203=1 + 1 ;break;end if ((v385==(0 -0)) or ((1320 -798)==(2609 -729))) then local v438=(63 -(62 + 1)) + 0 ;while true do if ((v438==(0 -0)) or ((5090 -(41 + 38 + 1528))<(12610 -9823))) then v76=(v206 + v204) -(1 + 0 + 0) ;v207=277 -(121 + 156) ;v438=855 -(88 + 766) ;end if ((v438==(3 -2)) or (3833>4799)) then v385=1 + 0 ;break;end end end end break;end end end if (((4692 -2989)<(1274 + 481)) and (v203==(0 -0))) then local v386=0 -0 ;local v387;while true do if (((2210 -(479 + 643))<(5511 -2192)) and (v386==(1436 -(956 + 480)))) then v387=0 -0 ;while true do if (((256 -189)<=2379) and (v387==1)) then v203=1 -0 ;break;end if ((1066>=(980 -585)) and (v387==(688 -(285 + 403)))) then local v439=0;while true do if (((0 -0)==v439) or ((4303 -((995 -398) + 1188))==(7147 -5181))) then v204=v92[1716 -(1203 + 511) ];v205,v206=v87(v90[v204](v14(v90,v204 + (1 -0) ,v76)));v439=1 + 0 ;end if ((v439==1) or ((2149 + 466)>=(290 + 3186))) then v387=102 -(65 + 17 + 19) ;break;end end end end break;end end end if ((v203==2) or ((929 + 315)>(753 + 3248))) then for v400=v204,v76 do local v401=0 -0 ;local v402;while true do if ((770==(1689 -(904 + (1196 -(905 + 276))))) and (v401==(0 + 0))) then v402=0;while true do if ((v402==(254 -(129 + 125))) or ((840 -(471 + 17))==(161 + 2906))) then v207=v207 + 1 + 0 ;v90[v400]=v205[v207];break;end end break;end end end break;end end break;end if (((18629 -13888)>=(1155 -(855 + 66))) and (v202==(689 -(333 + 356)))) then local v325=793 -(775 + 18) ;while true do if (((3409 -((595 -(465 + 37)) + 385))==(4021 -(333 + 757))) and (v325==(2 -1))) then v202=1;break;end if (((4073 -2685)<(3700 -(57 + 6))) and (0==v325)) then v203=542 -((2032 -(1899 + 46)) + 455) ;v204=nil;v325=1;end end end end break;end if ((v201==(5 -3)) or ((2799 -(1204 + 47))>=(4443 -(1573 + 30)))) then v206=nil;v207=nil;v201=133 -(121 + 1 + 8) ;end if ((v201==(0 + 0)) or ((3269 -(643 + 58 + 629))<=(3154 -(1194 + 36)))) then v202=0 -0 ;v203=nil;v201=1;end end end elseif ((v93<=(20 + 0)) or (2686>=(471 + 4166))) then if ((4401==(6249 -(884 + 964))) and (v93<=(48 -30))) then local v153=0 + 0 ;local v154;local v155;local v156;local v157;local v158;while true do if ((v153==(1878 -(676 + 1200))) or ((1539 -855)>(6177 -(871 + 628)))) then v158=nil;while true do if (((349 -(164 + 146))==(248 -(205 + 4))) and (v154==(0 -0))) then v155=v92[3 -1 ];v156,v157=v87(v90[v155](v14(v90,v155 + ((894 -(16 + 875)) -2) ,v92[6 -3 ])));v154=629 -(349 + 279) ;end if (((14773 -10382)>(3249 + 243)) and ((2 -1)==v154)) then v76=(v157 + v155) -1 ;v158=0 -0 ;v154=2 + 0 ;end if (((1789 + 1791)>=(67 + 69)) and (v154==(1898 -(958 + 938)))) then for v309=v155,v76 do local v310=0 + 0 ;local v311;while true do if (((9263 -7233)==2030) and (v310==(0 -0))) then v311=0 + 0 ;while true do if (((6361 -(1028 + (1116 -649)))>2272) and (v311==(0 + 0))) then v158=v158 + (1 -(0 + 0)) ;v90[v309]=v156[v158];break;end end break;end end end break;end end break;end if ((3865<4550) and ((70 -(41 + (98 -70)))==v153)) then v156=nil;v157=nil;v153=(1 -0) + 1 ;end if ((v153==(0 -0)) or (3707<=(2323 -1249))) then v154=0;v155=nil;v153=1461 -(1255 + 205) ;end end elseif (((3508 + 796)>=(793 + 94)) and (v93>(1562 -(1387 + 120 + 36)))) then local v208=0 + (0 -0) ;local v209;local v210;local v211;while true do if (((2956 + 1387)>=(100 + 4)) and (v208==(2 -(1 + 0)))) then v211=nil;while true do if ((v209==(748 -((1488 -(317 + 831)) + 407))) or ((4473 + 426)<(2137 -(384 + 1226)))) then while true do if ((v210==(604 -(387 + 217))) or ((2442 + 141)<(2767 -(3021 -1947)))) then v211=v92[2];do return v90[v211](v14(v90,v211 + (795 -(325 + 469)) ,v92[2 + (1373 -(111 + 1261)) ]));end break;end end break;end if (((14870 -10294)==(4472 + 104)) and (v209==(0 -0))) then local v326=0 -(0 + 0) ;while true do if ((v326==((353 + 1391) -(1134 + 610))) or ((3360 -(91 + 57))<(3592 -(1671 + 265)))) then v210=(0 -0) -0 ;v211=nil;v326=1 -0 ;end if ((v326==(1 + 0)) or (4913<=(970 + 59))) then v209=1;break;end end end end break;end if (((0 + 0)==v208) or ((320 -122)>(3241 -(250 + 898)))) then v209=0 -0 ;v210=nil;v208=1584 -(1547 + 36) ;end end else local v212=0 + (1809 -(195 + 1614)) ;local v213;local v214;local v215;local v216;while true do if ((v212==(0 + 0)) or ((17433 -13705)<=(219 + 914))) then v213=0;v214=nil;v212=1503 -(1314 + 188) ;end if ((3076>=(2082 + 305)) and (v212==(237 -(9 + 227)))) then v215=nil;v216=nil;v212=4 -(1646 -(304 + 1340)) ;end if ((v212==(4 -(782 -(322 + 458)))) or ((1594 -(495 + 1073))>(5680 -3646))) then while true do if (((199 -(120 + 79))==v213) or ((8026 -5788)>(4520 -2032))) then v214=v92[2];v215={v90[v214](v14(v90,v214 + (3 -2) ,v76))};v213=1 + 0 ;end if ((v213==1) or ((7543 -4989)>=4494)) then v216=0;for v352=v214,v92[8 -(932 -(881 + 47)) ] do local v353=151 -(11 + (242 -(61 + 41))) ;local v354;while true do if ((2474>=(453 + (3566 -(1295 + 469)))) and (v353==(0 + 0))) then v354=987 -(284 + 703) ;while true do if ((v354==(0 + 0)) or (1515==(2812 -(4 + 207)))) then v216=v216 + (806 -(560 + 245)) + 0 ;v90[v352]=v215[v216];break;end end break;end end end break;end end break;end end end elseif (((1843 -778)<=2265) and (v93<=(80 -58))) then if ((v93>(611 -(462 + (410 -282)))) or ((41 + 16)>(5191 -(3344 -(376 + 1030))))) then v90[v92[2 + 0 ]]=v46[v92[338 -(74 + 261) ]];else local v219=0 + 0 + 0 ;local v220;local v221;local v222;local v223;while true do if ((((29 + 316) -262)==83) and (v219==(3 -2))) then v222=nil;v223=nil;v219=1711 -((404 -176) + 1481) ;end if ((v219==(1390 -(369 + 1019))) or ((2890 -971)>=(9410 -7020))) then while true do if (((3874 -2918)<=(8720 -5512)) and (v220==1)) then v223=v92[5 -2 ];for v355=1,v223 do v222[v355]=v90[v221 + v355 ];end break;end if (((1 + 500)==(1302 -(49 + 54 + 698))) and (v220==0)) then local v329=(795 -(736 + 59)) + 0 ;while true do if (((15364 -11283)>=(3985 -(293 + 6))) and (v329==(0 + 0))) then v221=v92[4 -2 ];v222=v90[v221];v329=1 + 0 ;end if ((v329==(435 -(172 + 262))) or ((1740 + 2047)==2506)) then v220=1963 -(710 + 1252) ;break;end end end end break;end if ((0==v219) or ((10445 -6798)>(5279 -(308 + 899)))) then v220=0 + 0 ;v221=nil;v219=1 + 0 ;end end end elseif ((v93==(45 -22)) or ((461 + 1810)>2348)) then v90[v92[2 + 0 + 0 ]]= #v90[v92[11 -8 ]];elseif (((5779 -3653)>=1316) and (v92[(4 -2) + (244 -(96 + 148)) ]==v90[v92[9 -5 ]])) then v75=v75 + 1 + 0 + 0 ;else v75=v92[2 + 1 ];end elseif (((835 + 289)==(1524 -400)) and (v93<=(93 -56))) then if ((v93<=(947 -(291 + 626))) or ((7137 -4096)>=(11297 -7537))) then if ((v93<=(1938 -((2692 -(638 + 1119)) + 976))) or (((350 -202) + (5445 -(380 + 1474)))<(1632 -(104 + 353)))) then if ((v93<=25) or ((3019 -1891)>=(996 + 389 + 3026))) then v75=v92[1483 -(620 + 860) ];elseif ((v93>(57 -(96 -65))) or ((4441 -1335)>4655)) then v90[v92[4 -2 ]][v90[v92[8 -(1508 -(227 + 1276)) ]]]=v90[v92[2 + 2 ]];else local v227=0 -0 ;local v228;local v229;local v230;while true do if (((4181 -2010)<=(3044 + 1470)) and (v227==(72 -(14 + 57)))) then v230=nil;while true do if (((2220 -(495 + 951))<=(6325 -(855 + 1039))) and (v228==(1606 -(222 + 1383)))) then while true do if ((3422==(1670 + 1752)) and (v229==(0 + 0 + 0))) then v230=v92[6 -4 ];v90[v230]=v90[v230](v90[v230 + (165 -(133 + 31)) ]);break;end end break;end if ((v228==(0 + 0)) or ((4700 -(684 + 252))>4492)) then v229=(0 -0) + 0 ;v230=nil;v228=1;end end break;end if (((567 + 53)>=(2076 -((18 -11) + 1557))) and (v227==0)) then v228=0 + 0 ;v229=nil;v227=2 -1 ;end end end elseif ((1090<=(614 + 607)) and (v93<=(20 + 8))) then local v160=0 + (921 -(107 + 814)) ;local v161;local v162;while true do if (((4891 -(6823 -4523))>=(1596 -((243 -(20 + 11)) + 185))) and (v160==(0 + 0))) then local v275=0 + 0 ;while true do if (((4191 -1371)<(6538 -(649 + 1149))) and (v275==(424 -(24 + 400)))) then v161=v92[4 -2 ];v162=v90[v161];v275=1361 -(503 + 857) ;end if (((5368 -2289)<(6710 -2841)) and (v275==1)) then v160=1 + 0 ;break;end end end if (((72 + 225)<(1420 + 2596)) and (v160==(2 -1))) then for v280=v161 + 1 + 0 ,v92[4 -1 ] do v8(v162,v90[v280]);end break;end end elseif ((v93==(51 -22)) or ((560 + 2124)<=(2273 -1171))) then v90[v92[2]][v92[1449 -(513 + 933) ]]=v92[4];else local v233=0;local v234;local v235;local v236;while true do if ((v233==((2560 -1476) -(58 + 1025))) or ((10849 -(8560 -(486 + 482)))<=(6459 -3774))) then v236=nil;while true do if ((v234==(0 -0)) or (4844<(481 + 1015))) then v235=v92[(1088 -(614 + 473)) + 1 ];v236=v90[v92[3]];v234=(2886 -(133 + 1415)) -(630 + 707) ;end if ((((1062 -(223 + 228)) -259)<=(3197 -(1622 + 17))) and (1==v234)) then v90[v235 + ((1079 -373) -(470 + 235)) ]=v236;v90[v235]=v236[v92[3 + 1 ]];break;end end break;end if (((2410 -1150)==(2916 -(1356 + 300))) and ((0 + 0)==v233)) then v234=0 + 0 ;v235=nil;v233=1;end end end elseif ((v93<=(115 -82)) or ((310 + 4375)<(5831 -((1212 -881) + 859)))) then if ((v93<=31) or ((9272 -4533)<=(16242 -(11880 -(176 + 68))))) then local v163=0;local v164;local v165;local v166;local v167;local v168;while true do if (((1058 + 499)<=(1168 + 1479)) and (v163==(1772 -(1161 + 611)))) then v164=1273 -(332 + 941) ;v165=nil;v163=2 -1 ;end if ((v163==(1 -0)) or ((2897 -((1279 -843) + 409))>=(18245 -13270))) then v166=nil;v167=nil;v163=1668 -(422 + 1244) ;end if ((v163==2) or ((4054 -(601 + 529))<=(11095 -8462))) then v168=nil;while true do if (((3837 -(921 + 131))>1727) and (v164==((4 -2) -1))) then v76=(v167 + v165) -1 ;v168=0 -0 ;v164=1 + 1 ;end if (((652 + (3560 -(183 + 405)))>=(78 -32)) and ((587 -(112 + 475))==v164)) then local v296=0;while true do if ((v296==(1 + 0)) or ((1332 -(200 + (115 -74)))<891)) then v164=3 -2 ;break;end if (((888 -434)<(6236 -1831)) and (v296==((521 + 812) -((3082 -1827) + 78)))) then v165=v92[4 -2 ];v166,v167=v87(v90[v165](v90[v165 + 1 ]));v296=1 + 0 ;end end end if (((18502 -13858)==((4019 + 1700) -(488 + 587))) and (v164==(9 -(5 + 2)))) then for v312=v165,v76 do local v313=0 + 0 ;local v314;while true do if (((6215 -(973 + 249))>=(951 + 286)) and (v313==(237 -(105 + 132)))) then v314=0 -0 ;while true do if (((1029 + 2511)>(8157 -6049)) and (v314==0)) then v168=v168 + (1225 -((4761 -3574) + 37)) ;v90[v312]=v166[v168];break;end end break;end end end break;end end break;end end elseif ((v93>32) or (((4657 -2558) + 830)<(3853 -(526 + 855)))) then v90[v92[2]]=v90[v92[5 -2 ]][v92[215 -(196 + 15) ]];else local v239=0;local v240;local v241;local v242;while true do if (((7105 -4662)<=3386) and (v239==(1784 -(1252 + 531)))) then v242=nil;while true do if (((765 + 2526)>(3320 -(84 + 306))) and (0==v240)) then local v335=1426 -(1067 + 359) ;while true do if (((6725 -3426)>=(1467 -(705 + 268))) and (v335==(100 -(61 + 39)))) then v241=(0 -0) -0 ;v242=nil;v335=1 + 0 ;end if ((v335==(1 + 0)) or (4424<(551 + 1156 + 434))) then v240=1;break;end end end if ((v240==(2 -1)) or ((3037 -(895 + 541))<=(354 -(354 -245)))) then while true do if (((4831 -(159 + 1253))>=((833 + 5847) -4034)) and (v241==(0 -0))) then v242=v92[1 + 1 ];v90[v242]=v90[v242](v14(v90,v242 + 1 + 0 ,v92[2 + 1 ]));break;end end break;end end break;end if ((v239==(1030 -(219 + 384 + 427))) or (688>(3201 + 636))) then v240=(0 -0) + 0 ;v241=nil;v239=619 -((525 -(231 + 45)) + 369) ;end end end elseif ((v93<=(381 -(159 + 187))) or ((2296 + 2389)<=(513 + (3748 -(1065 + 264))))) then if (((3607 -(52 + 688 + 200))>=(1942 + 212)) and (v93>(96 -62))) then v90[v92[2]]=v90[v92[13 -10 ]] + v92[6 -2 ] ;else v90[v92[2 + 0 ]]=v90[v92[9 -6 ]];end elseif (((13269 -8872)>(678 + 3361)) and (v93>(106 -70))) then v90[v92[4 -2 ]]=v92[(1403 -803) -(441 + 156) ]~=0 ;elseif ( not v90[v92[6 -4 ]] or (((5746 -(695 + 1208)) + (1308 -(312 + 153)))==3079)) then v75=v75 + (257 -(18 + 238)) ;else v75=v92[1291 -(236 + 1052) ];end elseif ((v93<=(13 + 30)) or ((3406 -1197)==(2113 -(469 + 927)))) then if ((v93<=(1675 -(680 + 955))) or ((11743 -7758)<=(1826 -(367 + 730)))) then if (((4627 -2385)>=926) and (v93<=38)) then v90[v92[1681 -(416 + 1263) ]]=v92[3] + v90[v92[1497 -(593 + 900) ]] ;elseif ((v93>(89 -50)) or ((67 + 350)>(308 + 168))) then local v247=0 -0 ;local v248;local v249;while true do if (((390 -((151 -88) + 51))<=3304) and (v247==(0 + 0))) then v248=0 + 0 ;v249=nil;v247=(573 -(277 + 295)) + 0 ;end if ((((1796 + 3418) -(188 + 89 + 43))==4894) and (v247==1)) then while true do if ((v248==0) or (682>1478)) then v249=v92[3 -1 ];v90[v249]=v90[v249](v14(v90,v249 + 1 + 0 + 0 ,v76));break;end end break;end end else local v250=447 -(84 + 363) ;local v251;local v252;while true do if (((59 + 676)<((2662 -(261 + 659)) -771)) and (v250==(2 -1))) then while true do if (((2308 -(169 + 177))<((17900 + 2720) -16485)) and (v251==(0 + 0))) then v252=v92[6 -4 ];v90[v252](v14(v90,v252 + (1517 -(864 + 652)) ,v92[7 -4 ]));break;end end break;end if ((112<(3426 -((4467 -3162) + 126))) and (v250==0)) then v251=1173 -(946 + 227) ;v252=nil;v250=3 -(1 + 1) ;end end end elseif (((17269 -(28761 -15858))==4366) and (v93<=41)) then local v170=1952 -(1345 + 607) ;local v171;local v172;local v173;local v174;local v175;local v176;while true do if (((3286 -(406 + 177))<=(5185 -(1295 + 491))) and (v170==(2 + 0))) then v175=nil;v176=nil;v170=1085 -(46 + 1036) ;end if ((1==v170) or ((6470 -1745)<=(2036 -(22 + 88)))) then v173=nil;v174=nil;v170=3 -1 ;end if ((2102>(861 + 390)) and (v170==(1 + 0 + (1165 -(97 + 1066))))) then while true do if ((v171==(43 -(12 + 30))) or ((5122 -(875 + (1746 -(1146 + 39))))<=(4529 -972))) then local v297=0;while true do if ((v297==(3 -2)) or ((361 + 672)==(2617 -1550))) then v171=2;break;end if (((7232 -4915)>=(92 + 242)) and (v297==0)) then v174=v172 + (6 -4) ;v175={v90[v172](v90[v172 + (260 -(196 + 63)) ],v90[v174])};v297=(1 + 1) -1 ;end end end if (((18257 -13537)>2615) and (v171==(29 -((1690 -(971 + 699)) + 9)))) then local v298=0;while true do if (((12786 -7883)==(5403 -(296 + 204))) and (v298==(280 -(249 + 31)))) then v172=v92[309 -(13 + (759 -465)) ];v173=v92[14 -10 ];v298=1 -0 ;end if ((((3256 + 1600) -(960 + 1018))<(3047 + 789)) and (v298==1)) then v171=472 -((463 -138) + 146) ;break;end end end if (((441 -(282 + 157))==v171) or (((1418 + 127) -1069)==(2064 -(2156 -(523 + 928))))) then for v315=810 -(628 + 181) ,v173 do v90[v174 + v315 ]=v175[v315];end v176=v175[3 -2 ];v171=635 -(208 + 424) ;end if ((v171==(3 + 0)) or ((6177 -(1019 + 737))<=(383 + 4004))) then if (((1908 + 1927)==((957 + 3798) -(317 + 603))) and v176) then local v339=0 -0 ;local v340;while true do if (((0 + 0)==v339) or ((4519 -(52 + 154))<=(1394 -(161 + 18)))) then v340=74 -(35 + 39) ;while true do if ((((606 -(321 + 8)) + 1376)<(4740 -1259)) and (v340==(0 + 0))) then v90[v174]=v176;v75=v92[7 -(12 -8) ];break;end end break;end end else v75=v75 + 1 ;end break;end end break;end if (((5770 -(298 + 964))>=(2707 -(82 + 1900))) and (v170==(0 -0))) then v171=0 + 0 ;v172=nil;v170=1272 -(305 + 966) ;end end elseif (((212 + 237)<=(4171 -2095)) and (v93==(708 -((1921 -(784 + 646)) + (1440 -(739 + 526)))))) then local v253=0 -0 ;local v254;local v255;while true do if (((1249 -963)<=(3481 + (2740 -2054))) and (v253==(136 -(74 + 61)))) then while true do if (((2842 -(21 + 747))<(5444 -(554 + 312))) and (v254==((218 + 349) -(435 + 132)))) then v255=v92[1459 -(246 + 1211) ];do return v14(v90,v255,v76);end break;end end break;end if ((v253==0) or ((2142 -1409)>(11664 -8851))) then v254=0 -0 ;v255=nil;v253=1;end end else local v256=0 + 0 ;local v257;local v258;local v259;local v260;while true do if ((v256==(1 + 0)) or ((5256 -(907 + 52))>=(21695 -17215))) then v259=nil;v260=nil;v256=9 -7 ;end if (((1349 -(1208 + 141))==v256) or (810==(1089 + 476))) then v257=0;v258=nil;v256=918 -(444 + 473) ;end if ((751==(711 + 40)) and (v256==2)) then while true do if (((3434 + 1061)>3855) and (v257==(1653 -(1306 + 345)))) then for v361=1 + 0 ,v92[4] do local v362=0 + 0 ;local v363;local v364;while true do if (((643 + 304)<=2193) and (0==v362)) then v363=913 -(466 + 447) ;v364=nil;v362=1 -(0 -0) ;end if (((2499 -(1261 + 46))>=(594 + 207)) and (v362==(276 -(80 + 195)))) then while true do if ((v363==(1 + 0)) or (((4780 -(97 + 195)) -(86 + 108))==(180 -124))) then if (((10711 -6591)>=2233) and (v364[1]==(28 + 6))) then v260[v361-1 ]={v90,v364[824 -((540 -(403 + 75)) + 759) ]};else v260[v361-(1 -0) ]={v45,v364[10 -7 ]};end v89[ #v89 + (1 -0) ]=v260;break;end if ((161==(336 -175)) and (v363==0)) then v75=v75 + (3 -2) ;v364=v84[v75];v363=1 + (0 -0) ;end end break;end end end v90[v92[1 + 1 ]]=v43(v258,v259,v46);break;end if (((0 -0)==v257) or ((230 + 854)>=(8246 -4487))) then local v343=0;while true do if ((v343==(1931 -((2093 -(303 + 38)) + 178))) or ((9244 -(6641 -(1535 + 322)))<(440 + 2207))) then v257=1;break;end if ((v343==(670 -(414 + 256))) or (4478<=(2528 -(741 + 665)))) then v258=v85[v92[3]];v259=nil;v343=1;end end end if ((v257==((2 -1) + 0)) or ((725 + 1527)<(1760 -((89 -50) + 1156)))) then local v344=340 -(174 + 166) ;while true do if ((v344==(1 + 0)) or ((749 -437)==(2273 -(707 + 206)))) then v257=2;break;end if (((3534 -1135)>=(495 + 1412)) and (v344==(0 -0))) then v260={};v259=v11({},{__index=function(v396,v397)local v403=0 -(0 + 0) ;local v404;local v405;local v406;while true do if ((((4374 -(492 + 705)) + 847)>=(2969 -(149 + 483))) and (v403==(884 -(167 + (2141 -(908 + 517)))))) then v406=nil;while true do if ((v404==(270 -(223 + 47))) or ((12980 -8044)==1626)) then v405=1187 -(375 + 812) ;v406=nil;v404=1845 -(1624 + 220) ;end if (((2 -1)==v404) or ((3705 -((29 -9) + 13))<=(235 + 327))) then while true do if (((2077 + 2874)>=(4433 -1997)) and (v405==(0 + 0))) then local v460=0 + 0 ;while true do if ((v460==(0 -0)) or ((4129 -(4 + 154))<=((3618 -1682) + 723))) then local v466=0;while true do if ((v466==(0 + 0)) or ((10343 -8247)>(10135 -(8664 -2021)))) then v406=v260[v397];return v406[(2 -1) -0 ][v406[2 -0 ]];end end end end end end break;end end break;end if ((v403==0) or ((3784 -((375 -238) + 252))<=(541 + 2612))) then v404=0 + 0 ;v405=nil;v403=644 -(472 + 171) ;end end end,__newindex=function(v396,v397,v398)local v407=0 + 0 ;local v408;local v409;while true do if ((2364<3209) and (v407==(3 -2))) then while true do if (((4582 -(829 + (1914 -(366 + 421))))>(3401 -1889)) and (v408==0)) then v409=v260[v397];v409[1 -0 ][v409[1844 -(106 + 1736) ]]=v398;break;end end break;end if ((1514>=1481) and (v407==((0 -0) + 0))) then v408=0;v409=nil;v407=2 -1 ;end end end});v344=1;end end end end break;end end end elseif (((5521 -3412)>(1145 -(196 + 379))) and (v93<=(178 -132))) then if (((1221 + 269)<(2660 + 1570)) and (v93<=(123 -79))) then local v177=0 + 0 ;local v178;local v179;local v180;local v181;while true do if ((v177==(2 + 0)) or ((5106 -(417 + 371))==263)) then while true do if (((2538 -(5 + 300))==(4270 -2037)) and (v178==(1 -0))) then v181=v90[v179 + ((334 -(40 + 292)) -0) ];if (((8153 -4383)<=(5222 -(187 + 153))) and (v181>(856 -(772 + 84)))) then if ((v180>v90[v179 + 1 ]) or (3455<=(1243 -(335 + 565)))) then v75=v92[11 -8 ];else v90[v179 + 3 ]=v180;end elseif (((2658 + 2144)>(2909 + 856)) and (v180<v90[v179 + (2 -1) ])) then v75=v92[5 -2 ];else v90[v179 + 3 ]=v180;end break;end if (((0 + 0)==v178) or ((3178 -(4 + 456))<=(1450 -735))) then local v301=0 -0 ;while true do if (((6736 -(4204 + 514))==2018) and (v301==(1 -0))) then v178=1 + 0 ;break;end if (((3942 -2262)>(324 + (1205 -(128 + 1033)))) and (v301==(0 + 0))) then v179=v92[2 + 0 ];v180=v90[v179];v301=704 -(472 + 231) ;end end end end break;end if ((v177==(1 + 0 + 0 + 0)) or (3528<(3045 -1003))) then v180=nil;v181=nil;v177=1000 -(577 + 421) ;end if ((1787<=(18466 -13762)) and (v177==0)) then v178=0;v179=nil;v177=1 + 0 ;end end elseif (((417 + 873)<(1070 + 1904)) and (v93>(662 -(578 + 39)))) then v90[v92[484 -(102 + 380) ]]=v90[v92[5 -2 ]]%v90[v92[6 -2 ]] ;else local v262=822 -(173 + (739 -(82 + 8))) ;local v263;local v264;while true do if ((v262==(1246 -(917 + 328))) or ((4183 -(493 + (38 -7)))==(5870 -(1100 + 517)))) then for v302=2 -1 , #v89 do local v303=0 + 0 + 0 ;local v304;local v305;local v306;while true do if (((0 + 0)==v303) or ((314 + 209)>(2793 -(1201 + 461)))) then v304=0 -0 ;v305=nil;v303=(1379 -(510 + 867)) -1 ;end if (((2059 -(136 + 54))<3027) and (v303==(1 + 0))) then v306=nil;while true do if ((3665>(5285 -(8269 -5035))) and (v304==(1 + 0))) then while true do if ((v305==(0 -0)) or (4211==(4368 -(341 + 1022)))) then v306=v89[v302];for v433=0 + 0 , #v306 do local v434=0 + 0 + 0 ;local v435;local v436;local v437;while true do if ((v434==(0 + 0)) or ((6511 -(11 + 1504))<=(4227 -2333))) then local v456=912 -(595 + 317) ;while true do if (((10224 -(6090 + 366))>(9089 -(8493 -(922 + 586)))) and (v456==((1872 -(720 + 982)) -(116 + 54)))) then v435=v306[v433];v436=v435[1];v456=1;end if ((v456==(1 -0)) or ((6826 -(1629 + 254))==(1304 -(66 + 1049)))) then v434=1 -0 ;break;end end end if ((v434==(1 + 0)) or ((1008 + 1900)==3375)) then v437=v435[2];if (((v436==v90) and (v437>=v263)) or (2722>=(2317 + 1364))) then local v461=1878 -(844 + 1034) ;local v462;while true do if ((3580>(3320 -(1252 + 144))) and (v461==0)) then v462=1024 -(365 + 639 + 20) ;while true do if ((v462==0) or ((2493 -(21 + 816))>=(2621 -(685 + 148)))) then v264[v437]=v436[v437];v435[(731 -(571 + 158)) -(240 -(17 + 222)) ]=v264;break;end end break;end end end break;end end end break;end end break;end if (((3410 -(201 + 27))>(1452 -(82 + 71))) and (v304==(0 + (1520 -(418 + 1102))))) then local v410=0 -0 ;while true do if ((1961>=(520 -316)) and ((1 -0)==v410)) then v304=1245 -(249 + 811 + 184) ;break;end if ((v410==((96 + 617) -(175 + 538))) or (4767==(2291 -1447))) then v305=0 + 0 ;v306=nil;v410=(620 + 181) -(730 + 70) ;end end end end break;end end end break;end if (((2901 -2169)==(500 + 232)) and (v262==(0 + 0))) then v263=v92[7 -(3 + 2) ];v264={};v262=(286 -(253 + 32)) + 0 ;end end end elseif ((3814>=(3613 + 140)) and (v93<=48)) then if ((4526>(13 + 83)) and (v93>(15 + 32))) then v90[v92[1571 -(1071 + 498) ]]={};else v46[v92[27 -(10 + 14) ]]=v90[v92[1042 -(884 + 156) ]];end elseif ((((396 -239) + 848)<(4716 -(700 + 199))) and (v93==49)) then local v268=266 -(138 + 128) ;local v269;local v270;while true do if ((v268==1) or ((1716 + 1739)>=(2498 + 1887))) then while true do if ((v269==(0 + 0 + 0)) or ((5430 -(1407 + 426))==(1860 + 1612))) then v270=v92[1 + 1 ];v90[v270]=v90[v270]();break;end end break;end if ((1811>=(2666 -1393)) and (v268==(0 + 0))) then v269=0 -0 ;v270=nil;v268=361 -(145 + (381 -166)) ;end end else v90[v92[4 -2 ]][v90[v92[14 -11 ]]]=v92[3 + 1 ];end v75=v75 + 1 + 0 ;break;end end break;end end end end A,B=v41(v12(v79));if  not A[1] then local v97=v44[4][v75] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
